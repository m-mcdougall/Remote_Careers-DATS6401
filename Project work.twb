<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0315.1000                               -->
<workbook original-version='18.1' source-build='2020.4.3 (20204.21.0315.1000)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Projectwork_16174027555400' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Data_out)' inline='true' name='federated.048pp4f1pumwnu1fy3788180uqel' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data_out' name='excel-direct.0cs9tem1vosfib1fh6ypa0apf36o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Mariko/Documents/GitHub/Remote_Careers-DATS6401/Data/Data_out.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0cs9tem1vosfib1fh6ypa0apf36o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='JobID' ordinal='0' />
            <column datatype='string' name='SearchState' ordinal='1' />
            <column datatype='string' name='SearchCity' ordinal='2' />
            <column datatype='integer' name='Category' ordinal='3' />
            <column datatype='string' name='SearchTitle' ordinal='4' />
            <column datatype='string' name='Title' ordinal='5' />
            <column datatype='string' name='Company' ordinal='6' />
            <column datatype='real' name='Stars' ordinal='7' />
            <column datatype='string' name='Location' ordinal='8' />
            <column datatype='string' name='Wage' ordinal='9' />
            <column datatype='string' name='Remote' ordinal='10' />
            <column datatype='real' name='Lower' ordinal='11' />
            <column datatype='real' name='Upper' ordinal='12' />
            <column datatype='real' name='Midrange' ordinal='13' />
            <column datatype='string' name='Region' ordinal='14' />
            <column datatype='string' name='CategoryStr' ordinal='15' />
            <column datatype='integer' name='Not Remote-OHE' ordinal='16' />
            <column datatype='integer' name='Temporarily remote-OHE' ordinal='17' />
            <column datatype='integer' name='Remote-OHE' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0cs9tem1vosfib1fh6ypa0apf36o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='JobID' ordinal='0' />
            <column datatype='string' name='SearchState' ordinal='1' />
            <column datatype='string' name='SearchCity' ordinal='2' />
            <column datatype='integer' name='Category' ordinal='3' />
            <column datatype='string' name='SearchTitle' ordinal='4' />
            <column datatype='string' name='Title' ordinal='5' />
            <column datatype='string' name='Company' ordinal='6' />
            <column datatype='real' name='Stars' ordinal='7' />
            <column datatype='string' name='Location' ordinal='8' />
            <column datatype='string' name='Wage' ordinal='9' />
            <column datatype='string' name='Remote' ordinal='10' />
            <column datatype='real' name='Lower' ordinal='11' />
            <column datatype='real' name='Upper' ordinal='12' />
            <column datatype='real' name='Midrange' ordinal='13' />
            <column datatype='string' name='Region' ordinal='14' />
            <column datatype='string' name='CategoryStr' ordinal='15' />
            <column datatype='integer' name='Not Remote-OHE' ordinal='16' />
            <column datatype='integer' name='Temporarily remote-OHE' ordinal='17' />
            <column datatype='integer' name='Remote-OHE' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S10001:no:A1:S10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JobID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[JobID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JobID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SearchState</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SearchState]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SearchState</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SearchCity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SearchCity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SearchCity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SearchTitle</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SearchTitle]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SearchTitle</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stars]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Stars</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Wage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remote</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Remote]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Remote</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lower]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lower</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upper]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Upper</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Midrange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Midrange]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Midrange</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CategoryStr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CategoryStr]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CategoryStr</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Not Remote-OHE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Not Remote-OHE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Not Remote-OHE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temporarily remote-OHE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Temporarily remote-OHE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Temporarily remote-OHE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remote-OHE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Remote-OHE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Remote-OHE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='JobsFixedRemote' datatype='integer' name='[Calculation_1145603186504515584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [CategoryStr]:COUNTD([JobID])}' />
      </column>
      <column caption='TotalJobsInState' datatype='integer' name='[Calculation_180144016051814408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [SearchState] : COUNTD( [JobID] ) }' />
      </column>
      <column caption='RemotePerState' datatype='integer' name='[Calculation_180144016054620170]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([JobID])' />
      </column>
      <column caption='TotalPercent' datatype='integer' name='[Calculation_180144016058298379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Remote],[SearchState]:COUNTD([JobID])}' />
      </column>
      <column caption='PercentPerState' datatype='real' name='[Calculation_180144016105074701]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_180144016054620170]/SUM([Calculation_180144016051814408])' />
      </column>
      <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
          <bin default-name='false' value='&quot;Interpersonal&quot;'>
            <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
            <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
            <value>&quot;Community and Social Service&quot;</value>
            <value>&quot;Community and Social Service Occupations&quot;</value>
            <value>&quot;Educational Instruction and Library&quot;</value>
            <value>&quot;Educational Instruction and Library Occupations&quot;</value>
            <value>&quot;Management&quot;</value>
            <value>&quot;Management Occupations&quot;</value>
            <value>&quot;Office and Administrative Support&quot;</value>
            <value>&quot;Office and Administrative Support Occupations&quot;</value>
            <value>&quot;Sales&quot;</value>
            <value>&quot;Sales and Related Occupations&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Physical&quot;'>
            <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
            <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
            <value>&quot;Construction and Extraction&quot;</value>
            <value>&quot;Construction and Extraction Occupations&quot;</value>
            <value>&quot;Farming, Fishing, and Forestry&quot;</value>
            <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
            <value>&quot;Food Preparation and Serving&quot;</value>
            <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
            <value>&quot;Healthcare Practitioners and Technical&quot;</value>
            <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
            <value>&quot;Healthcare Support&quot;</value>
            <value>&quot;Healthcare Support Occupations&quot;</value>
            <value>&quot;Installation, Maintenance, and Repair&quot;</value>
            <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
            <value>&quot;Personal Care and Service&quot;</value>
            <value>&quot;Personal Care and Service Occupations&quot;</value>
            <value>&quot;Production&quot;</value>
            <value>&quot;Production Occupations&quot;</value>
            <value>&quot;Protective Service&quot;</value>
            <value>&quot;Protective Service Occupations&quot;</value>
            <value>&quot;Transportation and Material Moving&quot;</value>
            <value>&quot;Transportation and Material Moving Occupations&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Technical&quot;'>
            <value>&quot;Architecture and Engineering&quot;</value>
            <value>&quot;Architecture and Engineering Occupations&quot;</value>
            <value>&quot;Business and Financial Operations&quot;</value>
            <value>&quot;Business and Financial Operations Occupations&quot;</value>
            <value>&quot;Computer and Mathematical&quot;</value>
            <value>&quot;Computer and Mathematical Occupations&quot;</value>
            <value>&quot;Legal&quot;</value>
            <value>&quot;Legal Occupations&quot;</value>
            <value>&quot;Life, Physical, and Social Science&quot;</value>
            <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
      <column datatype='string' name='[Grouped Remote]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Remote]' new-bin='true'>
          <bin default-name='false' value='&quot;All Remotes&quot;'>
            <value>&quot;Remote&quot;</value>
            <value>&quot;Temporarily remote&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Count' datatype='integer' name='[JobID]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lower]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Midrange]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Not Remote-OHE]' role='measure' type='quantitative' />
      <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
          <bin default-name='false' value='&quot;Midwest&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Northeast&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pacific&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Washington&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southeast&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southwest&quot;'>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Remote-OHE]' role='measure' type='quantitative' />
      <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
      <column caption='Search City' datatype='string' name='[SearchCity]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Search Title' datatype='string' name='[SearchTitle]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Temporarily remote-OHE]' role='measure' type='quantitative' />
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Upper]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]' role='measure' type='quantitative' />
      <column-instance column='[Midrange]' derivation='Attribute' name='[attr:Midrange:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lower]' derivation='Avg' name='[avg:Lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Midrange]' derivation='Avg' name='[avg:Midrange:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Midrange]' derivation='Avg' name='[avg:Midrange:vtmin:qk]' pivot='key' type='quantitative' visual-totals='Min' />
      <column-instance column='[Upper]' derivation='Avg' name='[avg:Upper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Not Remote-OHE]' derivation='Count' name='[cnt:Not Remote-OHE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temporarily remote-OHE]' derivation='Count' name='[cnt:Temporarily remote-OHE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lower]' derivation='Median' name='[med:Lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Midrange]' derivation='Median' name='[med:Midrange:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Upper]' derivation='Median' name='[med:Upper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CategoryStr]' derivation='None' name='[none:CategoryStr:nk]' pivot='key' type='nominal' />
      <column-instance column='[Midrange]' derivation='None' name='[none:Midrange:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Midrange]' derivation='None' name='[none:Midrange:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
      <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lower]' derivation='Sum' name='[sum:Lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Midrange]' derivation='Sum' name='[sum:Midrange:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Not Remote-OHE]' derivation='Sum' name='[sum:Not Remote-OHE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Remote-OHE]' derivation='Sum' name='[sum:Remote-OHE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temporarily remote-OHE]' derivation='Sum' name='[sum:Temporarily remote-OHE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Upper]' derivation='Sum' name='[sum:Upper:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category Str (group))' hidden='true' name='[Action (Category Str (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category Str (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)' hidden='true' name='[Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category Str (group)]' />
          <groupfilter function='level-members' level='[none:Midrange:ok]' />
          <groupfilter function='level-members' level='[RegionGroups]' />
          <groupfilter function='level-members' level='[Remote]' />
          <groupfilter function='level-members' level='[SearchState]' />
          <groupfilter function='level-members' level='[SearchTitle]' />
          <groupfilter function='level-members' level='[Title]' />
        </groupfilter>
      </group>
      <group caption='Action (Category Str (group),Remote)' hidden='true' name='[Action (Category Str (group),Remote)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category Str (group)]' />
          <groupfilter function='level-members' level='[Remote]' />
        </groupfilter>
      </group>
      <group caption='Action (Category Str)' hidden='true' name='[Action (Category Str)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CategoryStr]' />
        </groupfilter>
      </group>
      <group caption='Action (Category Str,Remote)' hidden='true' name='[Action (Category Str,Remote)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CategoryStr]' />
          <groupfilter function='level-members' level='[Remote]' />
        </groupfilter>
      </group>
      <group caption='Action (Search State)' hidden='true' name='[Action (Search State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[SearchState]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Category Str (group),Remote,Search State,Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category Str (group)]' />
          <groupfilter function='level-members' level='[none:Remote:nk]' />
          <groupfilter function='level-members' level='[none:SearchState:nk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Category Str,Midrange)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:CategoryStr:nk]' />
          <groupfilter function='level-members' level='[none:Midrange:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Category Str,Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:CategoryStr:nk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Remote,Search State,Title)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Remote:nk]' />
          <groupfilter function='level-members' level='[none:SearchState:nk]' />
          <groupfilter function='level-members' level='[none:Title:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='StatesH'>
          <field>[SearchState]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/Mariko/Documents/My Tableau Repository/Datasources/Sheet1 (Data_out).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/13/2021 09:20:40 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Data_out)' increment-value='%null%' refresh-type='create' rows-inserted='77843' timestamp-start='2021-04-13 21:20:40.409' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>JobID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[JobID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>JobID</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77843</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SearchState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SearchState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SearchState</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SearchCity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SearchCity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SearchCity</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SearchTitle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SearchTitle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SearchTitle</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Title</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14880</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13183</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Stars</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Stars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Stars</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1174</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wage</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3355</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Remote</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Remote]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Remote</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lower</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lower</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1291</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upper</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upper]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upper</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1250</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Midrange</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Midrange]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Midrange</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1865</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CategoryStr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CategoryStr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CategoryStr</remote-alias>
              <ordinal>15</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Not Remote-OHE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Not Remote-OHE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Not Remote-OHE</remote-alias>
              <ordinal>16</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temporarily remote-OHE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Temporarily remote-OHE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temporarily remote-OHE</remote-alias>
              <ordinal>17</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Remote-OHE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Remote-OHE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Remote-OHE</remote-alias>
              <ordinal>18</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Category Str (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Technical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Physical&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Interpersonal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CategoryStr:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Farming, Fishing, and Forestry Occupations&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Architecture and Engineering Occupations&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sales and Related Occupations&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Community and Social Service Occupations&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Installation, Maintenance, and Repair Occupations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food Preparation and Serving Related Occupations&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computer and Mathematical Occupations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Production Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Transportation and Material Moving Occupations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Office and Administrative Support Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Construction and Extraction Occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Legal Occupations&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Life, Physical, and Social Science Occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Personal Care and Service Occupations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Protective Service Occupations&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Healthcare Practitioners and Technical Occupations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Educational Instruction and Library Occupations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Management Occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Healthcare Support Occupations&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business and Financial Operations Occupations&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[med:Lower:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Remote-OHE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:Temporarily remote-OHE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Temporarily remote-OHE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:Not Remote-OHE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Not Remote-OHE:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Lower:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Midrange:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[attr:Midrange:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:vtmin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Upper:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[med:Upper:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Upper:qk]&quot;</bucket>
            </map>
            <map to='#fefefe'>
              <bucket>&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Lower:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Grouped Remote]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Not Remote&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;All Remotes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Remote:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Not Remote&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Temporarily remote&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Remote&quot;</bucket>
            </map>
            <map to='#f8f9fa'>
              <bucket>%all%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9C9827D9D3C04529BBA75204FC2BC1C3'>
            <properties context=''>
              <relation connection='excel-direct.0cs9tem1vosfib1fh6ypa0apf36o' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='JobID' ordinal='0' />
                  <column datatype='string' name='SearchState' ordinal='1' />
                  <column datatype='string' name='SearchCity' ordinal='2' />
                  <column datatype='integer' name='Category' ordinal='3' />
                  <column datatype='string' name='SearchTitle' ordinal='4' />
                  <column datatype='string' name='Title' ordinal='5' />
                  <column datatype='string' name='Company' ordinal='6' />
                  <column datatype='real' name='Stars' ordinal='7' />
                  <column datatype='string' name='Location' ordinal='8' />
                  <column datatype='string' name='Wage' ordinal='9' />
                  <column datatype='string' name='Remote' ordinal='10' />
                  <column datatype='real' name='Lower' ordinal='11' />
                  <column datatype='real' name='Upper' ordinal='12' />
                  <column datatype='real' name='Midrange' ordinal='13' />
                  <column datatype='string' name='Region' ordinal='14' />
                  <column datatype='string' name='CategoryStr' ordinal='15' />
                  <column datatype='integer' name='Not Remote-OHE' ordinal='16' />
                  <column datatype='integer' name='Temporarily remote-OHE' ordinal='17' />
                  <column datatype='integer' name='Remote-OHE' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
  </mapsources>
  <actions>
    <action caption='Just the Category Group' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Regionality Dashboard' type='sheet' worksheet='Pie Charts' />
      <link caption='Just the Category Group' delimiter=',' escape='\' expression='tsl:Regionality%20Dashboard?%5Bfederated.048pp4f1pumwnu1fy3788180uqel%5D.%5BCategory%20Str%20%28group%29%5D~s0=&lt;[Category Str (group)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Regionality Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Wage Dashboard' type='sheet' worksheet='Map Wage per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Wage Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Wage Dashboard' type='sheet' worksheet='Wage by category (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Wage Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Wage Dashboard' type='sheet' worksheet='Bubble Plot Wages Spot Outliers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Wage Dashboard' />
      </command>
    </action>
    <action caption='Just the Category' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Regionality Dashboard' type='sheet' worksheet='Percent of Remote Jobs by Industry' />
      <link caption='Just the Category' delimiter=',' escape='\' expression='tsl:Regionality%20Dashboard?%5Bfederated.048pp4f1pumwnu1fy3788180uqel%5D.%5BCategoryStr%5D~s0=&lt;[CategoryStr]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Regionality Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Regionality Dashboard' type='sheet' worksheet='MAP Remote per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Regionality Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
    </datasources>
    <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
      <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
          <bin default-name='false' value='&quot;Interpersonal&quot;'>
            <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
            <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
            <value>&quot;Community and Social Service&quot;</value>
            <value>&quot;Community and Social Service Occupations&quot;</value>
            <value>&quot;Educational Instruction and Library&quot;</value>
            <value>&quot;Educational Instruction and Library Occupations&quot;</value>
            <value>&quot;Management&quot;</value>
            <value>&quot;Management Occupations&quot;</value>
            <value>&quot;Office and Administrative Support&quot;</value>
            <value>&quot;Office and Administrative Support Occupations&quot;</value>
            <value>&quot;Sales&quot;</value>
            <value>&quot;Sales and Related Occupations&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Physical&quot;'>
            <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
            <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
            <value>&quot;Construction and Extraction&quot;</value>
            <value>&quot;Construction and Extraction Occupations&quot;</value>
            <value>&quot;Farming, Fishing, and Forestry&quot;</value>
            <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
            <value>&quot;Food Preparation and Serving&quot;</value>
            <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
            <value>&quot;Healthcare Practitioners and Technical&quot;</value>
            <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
            <value>&quot;Healthcare Support&quot;</value>
            <value>&quot;Healthcare Support Occupations&quot;</value>
            <value>&quot;Installation, Maintenance, and Repair&quot;</value>
            <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
            <value>&quot;Personal Care and Service&quot;</value>
            <value>&quot;Personal Care and Service Occupations&quot;</value>
            <value>&quot;Production&quot;</value>
            <value>&quot;Production Occupations&quot;</value>
            <value>&quot;Protective Service&quot;</value>
            <value>&quot;Protective Service Occupations&quot;</value>
            <value>&quot;Transportation and Material Moving&quot;</value>
            <value>&quot;Transportation and Material Moving Occupations&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Technical&quot;'>
            <value>&quot;Architecture and Engineering&quot;</value>
            <value>&quot;Architecture and Engineering Occupations&quot;</value>
            <value>&quot;Business and Financial Operations&quot;</value>
            <value>&quot;Business and Financial Operations Occupations&quot;</value>
            <value>&quot;Computer and Mathematical&quot;</value>
            <value>&quot;Computer and Mathematical Occupations&quot;</value>
            <value>&quot;Legal&quot;</value>
            <value>&quot;Legal Occupations&quot;</value>
            <value>&quot;Life, Physical, and Social Science&quot;</value>
            <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Bubble Plot Wages Spot Outliers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Midrange]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Search Title' datatype='string' name='[SearchTitle]' role='dimension' type='nominal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Midrange]' derivation='Avg' name='[avg:Midrange:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CategoryStr]' derivation='None' name='[none:CategoryStr:nk]' pivot='key' type='nominal' />
            <column-instance column='[Midrange]' derivation='None' name='[none:Midrange:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchTitle]' derivation='None' name='[none:SearchTitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str,Remote)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[CategoryStr]' />
              <groupfilter function='level-members' level='[Remote]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]'>
            <groupfilter function='level-members' level='[SearchState]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' filter-group='4'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Exclusions (Remote,Search State,Title)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Remote:nk]' />
              <groupfilter function='level-members' level='[none:SearchState:nk]' />
              <groupfilter function='level-members' level='[none:Title:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]'>
            <groupfilter function='level-members' level='[none:CategoryStr:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter function='level-members' level='[none:SearchState:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Exclusions (Remote,Search State,Title)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:qk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str,Remote)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]' scope='cols' value='Salary' />
            <format attr='height' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]' value='57' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]' value='n&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Title:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchTitle:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='11' underline='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:Title:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Salary:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Job Type:</run>
                <run bold='true'><![CDATA[ <[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' italic='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]>  -  <[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1094474792480469' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
                <format attr='mark-transparency' value='137' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups] / [federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk])</rows>
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Midrange:qk]</cols>
      </table>
      <simple-id uuid='{A28D23BA-657C-450C-8F84-253739C01314}' />
    </worksheet>
    <worksheet name='MAP Remote per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column caption='TotalJobsInState' datatype='integer' name='[Calculation_180144016051814408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [SearchState] : COUNTD( [JobID] ) }' />
            </column>
            <column caption='RemotePerState' datatype='integer' name='[Calculation_180144016054620170]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([JobID])' />
            </column>
            <column caption='PercentPerState' datatype='real' name='[Calculation_180144016105074701]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_180144016054620170]/SUM([Calculation_180144016051814408])' />
            </column>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column datatype='string' name='[Grouped Remote]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Remote]' new-bin='true'>
                <bin default-name='false' value='&quot;All Remotes&quot;'>
                  <value>&quot;Remote&quot;</value>
                  <value>&quot;Temporarily remote&quot;</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Count' datatype='integer' name='[JobID]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JobID]' derivation='Count' name='[cnt:JobID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_180144016051814408]' derivation='Sum' name='[sum:Calculation_180144016051814408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_180144016054620170]' derivation='User' name='[usr:Calculation_180144016054620170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_180144016105074701]' derivation='User' name='[usr:Calculation_180144016105074701:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group))]'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str)]'>
            <groupfilter function='level-members' level='[CategoryStr]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Grouped Remote]'>
            <groupfilter function='member' level='[Grouped Remote]' member='&quot;All Remotes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' filter-group='3'>
            <groupfilter function='level-members' level='[RegionGroups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:SearchState:nk]' to='&quot;Wyoming&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Grouped Remote]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group))]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Longitude (generated)]' field-type='quantitative' max='33369939.07954222' min='25394248.924511023' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Latitude (generated)]' field-type='quantitative' max='6087573.4136517718' min='3164590.7252189363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' max='0.20000000000000001' min='0.0' num-steps='7' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' value='Percent Remote (Temporary and Permanent)'>
              <formatted-text>
                <run fontalignment='1'>Percent Remote (Temporary and Permanent)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Calculation_180144016051814408:qk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016054620170:qk]' />
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' />
              <geometry column='[federated.048pp4f1pumwnu1fy3788180uqel].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='11' underline='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Remote:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Jobs:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016054620170:qk]>/<[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Calculation_180144016051814408:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Temporary and Permanently Remote Combined</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048pp4f1pumwnu1fy3788180uqel].[Latitude (generated)]</rows>
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{242DCAAB-8767-48BA-BDA8-A311376069F6}' />
    </worksheet>
    <worksheet name='Map Wage per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Midrange]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Search Title' datatype='string' name='[SearchTitle]' role='dimension' type='nominal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Midrange]' derivation='Median' name='[med:Midrange:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Midrange]' derivation='None' name='[none:Midrange:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category Str (group)]' />
              <groupfilter function='level-members' level='[none:Midrange:ok]' />
              <groupfilter function='level-members' level='[RegionGroups]' />
              <groupfilter function='level-members' level='[Remote]' />
              <groupfilter function='level-members' level='[SearchState]' />
              <groupfilter function='level-members' level='[SearchTitle]' />
              <groupfilter function='level-members' level='[Title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str,Remote)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[CategoryStr]' />
              <groupfilter function='level-members' level='[Remote]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' filter-group='4'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]'>
            <groupfilter function='level-members' level='[RegionGroups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]'>
            <groupfilter function='level-members' level='[none:Remote:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter function='level-members' level='[none:SearchState:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str,Remote)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Longitude (generated)]' field-type='quantitative' max='32667503.521706682' min='25368707.641362414' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Latitude (generated)]' field-type='quantitative' max='6485724.1940541258' min='2461585.5491249803' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' value='Salary' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='local' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' value='Occupation Category'>
              <formatted-text>
                <run>Occupation Category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' />
              <text column='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]' />
              <geometry column='[federated.048pp4f1pumwnu1fy3788180uqel].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='has-halo' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048pp4f1pumwnu1fy3788180uqel].[Latitude (generated)]</rows>
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[Longitude (generated)]</cols>
        <percentages enabled='true' mode='row-in-pane' />
      </table>
      <simple-id uuid='{EEE35BD6-C511-4A21-8793-FC432A524053}' />
    </worksheet>
    <worksheet name='Percent of Remote Jobs by Industry'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column caption='JobsFixedRemote' datatype='integer' name='[Calculation_1145603186504515584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [CategoryStr]:COUNTD([JobID])}' />
            </column>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column aggregation='Count' datatype='integer' name='[JobID]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Not Remote-OHE]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Remote-OHE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JobID]' derivation='Count' name='[cnt:JobID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CategoryStr]' derivation='None' name='[none:CategoryStr:nk]' pivot='key' type='nominal' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
            <column-instance column='[JobID]' derivation='Count' name='[pcto:cnt:JobID:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1145603186504515584]' derivation='Sum' name='[sum:Calculation_1145603186504515584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Not Remote-OHE]' derivation='Sum' name='[sum:Not Remote-OHE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Remote-OHE]' derivation='Sum' name='[sum:Remote-OHE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Not Remote-OHE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Remote-OHE:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group))]'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]'>
            <groupfilter function='level-members' level='[SearchState]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' filter-group='3'>
            <groupfilter function='level-members' level='[RegionGroups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter function='level-members' level='[none:SearchState:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[:Measure Names]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' scope='rows' value='% Jobs in the Industry' />
            <format attr='height' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='145' />
            <format attr='width' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='p0%' />
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' value='on' />
            <format attr='wrap' data-class='subtotal' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='auto' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='0' />
            <format attr='text-orientation' data-class='total' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' value='on' />
            <format attr='text-orientation' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='-90' />
            <format attr='wrap' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='on' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' />
              <text column='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Calculation_1145603186504515584:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878' italic='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run bold='true'>Percent: </run>
                <run fontcolor='#787878'><![CDATA[	<[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Absolute Jobs:</run>
                <run fontcolor='#787878'><![CDATA[ <[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]> / <[federated.048pp4f1pumwnu1fy3788180uqel].[sum:Calculation_1145603186504515584:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]</rows>
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</cols>
      </table>
      <simple-id uuid='{6AA0DD76-2E99-497E-AA4C-500CDAA182C1}' />
    </worksheet>
    <worksheet name='Pie Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column aggregation='Count' datatype='integer' name='[JobID]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JobID]' derivation='Count' name='[cnt:JobID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
            <column-instance column='[JobID]' derivation='Count' name='[pcto:cnt:JobID:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str)]'>
            <groupfilter function='level-members' level='[CategoryStr]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]'>
            <groupfilter function='level-members' level='[SearchState]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' filter-group='3'>
            <groupfilter function='level-members' level='[RegionGroups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter function='level-members' level='[none:SearchState:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='p0%' />
            <format attr='text-orientation' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='0' />
            <format attr='wrap' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='auto' />
            <format attr='text-align' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='auto' />
            <format attr='vertical-align' field='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' value='88' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' value='Regions Included'>
              <formatted-text>
                <run>Regions Included</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' />
              <wedge-size column='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]' />
              <text column='[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Remote: &#9;   &#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'># of Jobs in Category:&#9;&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Jobs in Category:&#9;&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.8350828886032104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</cols>
      </table>
      <simple-id uuid='{566A79DD-B28F-4BB3-A73B-EF97CE22D230}' />
    </worksheet>
    <worksheet name='Star Rating By Industry'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column datatype='real' name='[Stars]' role='measure' type='quantitative' />
            <column-instance column='[Stars]' derivation='Avg' name='[avg:Stars:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CategoryStr]' derivation='None' name='[none:CategoryStr:nk]' pivot='key' type='nominal' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]'>
            <groupfilter from='&quot;Not Remote&quot;' function='range' level='[none:Remote:nk]' to='&quot;Temporarily remote&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Stars:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' max='5.0' min='3.0' minor-origin='0.0' minor-show='false' minor-spacing='0.10000000000000001' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Stars:qk]' scope='cols' value='Company Rating' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='392' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#f8f9fa' />
            <format attr='background-color' data-class='total' value='#f8f9fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' underline='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average Rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Stars:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</rows>
        <cols>[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Stars:qk]</cols>
      </table>
      <simple-id uuid='{11A9C349-9FDD-45A8-946A-8C8DAAF53A4B}' />
    </worksheet>
    <worksheet name='Wage by category (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
          </datasources>
          <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
            <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
                <bin default-name='false' value='&quot;Interpersonal&quot;'>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
                  <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
                  <value>&quot;Community and Social Service&quot;</value>
                  <value>&quot;Community and Social Service Occupations&quot;</value>
                  <value>&quot;Educational Instruction and Library&quot;</value>
                  <value>&quot;Educational Instruction and Library Occupations&quot;</value>
                  <value>&quot;Management&quot;</value>
                  <value>&quot;Management Occupations&quot;</value>
                  <value>&quot;Office and Administrative Support&quot;</value>
                  <value>&quot;Office and Administrative Support Occupations&quot;</value>
                  <value>&quot;Sales&quot;</value>
                  <value>&quot;Sales and Related Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Physical&quot;'>
                  <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
                  <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
                  <value>&quot;Construction and Extraction&quot;</value>
                  <value>&quot;Construction and Extraction Occupations&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry&quot;</value>
                  <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
                  <value>&quot;Food Preparation and Serving&quot;</value>
                  <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical&quot;</value>
                  <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
                  <value>&quot;Healthcare Support&quot;</value>
                  <value>&quot;Healthcare Support Occupations&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair&quot;</value>
                  <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
                  <value>&quot;Personal Care and Service&quot;</value>
                  <value>&quot;Personal Care and Service Occupations&quot;</value>
                  <value>&quot;Production&quot;</value>
                  <value>&quot;Production Occupations&quot;</value>
                  <value>&quot;Protective Service&quot;</value>
                  <value>&quot;Protective Service Occupations&quot;</value>
                  <value>&quot;Transportation and Material Moving&quot;</value>
                  <value>&quot;Transportation and Material Moving Occupations&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical&quot;'>
                  <value>&quot;Architecture and Engineering&quot;</value>
                  <value>&quot;Architecture and Engineering Occupations&quot;</value>
                  <value>&quot;Business and Financial Operations&quot;</value>
                  <value>&quot;Business and Financial Operations Occupations&quot;</value>
                  <value>&quot;Computer and Mathematical&quot;</value>
                  <value>&quot;Computer and Mathematical Occupations&quot;</value>
                  <value>&quot;Legal&quot;</value>
                  <value>&quot;Legal Occupations&quot;</value>
                  <value>&quot;Life, Physical, and Social Science&quot;</value>
                  <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
            <column aggregation='Count' datatype='integer' name='[JobID]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Midrange]' role='measure' type='quantitative' />
            <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southwest&quot;'>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Remote]' role='dimension' type='nominal' />
            <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Search Title' datatype='string' name='[SearchTitle]' role='dimension' type='nominal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Midrange]' derivation='Avg' name='[avg:Midrange:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Midrange]' derivation='Avg' name='[avg:Midrange:vtmin:qk]' pivot='key' type='quantitative' visual-totals='Min' />
            <column-instance column='[JobID]' derivation='Count' name='[cnt:JobID:vtmin:qk]' pivot='key' type='quantitative' visual-totals='Min' />
            <column-instance column='[CategoryStr]' derivation='None' name='[none:CategoryStr:nk]' pivot='key' type='nominal' />
            <column-instance column='[Midrange]' derivation='None' name='[none:Midrange:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Remote]' derivation='None' name='[none:Remote:nk]' pivot='key' type='nominal' />
            <column-instance column='[SearchState]' derivation='None' name='[none:SearchState:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category Str (group)]' />
              <groupfilter function='level-members' level='[none:Midrange:ok]' />
              <groupfilter function='level-members' level='[RegionGroups]' />
              <groupfilter function='level-members' level='[Remote]' />
              <groupfilter function='level-members' level='[SearchState]' />
              <groupfilter function='level-members' level='[SearchTitle]' />
              <groupfilter function='level-members' level='[Title]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]'>
            <groupfilter function='level-members' level='[SearchState]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' filter-group='4'>
            <groupfilter function='level-members' level='[Category Str (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]'>
            <groupfilter function='level-members' level='[RegionGroups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]'>
            <groupfilter function='level-members' level='[none:SearchState:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:qk]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Search State)]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</column>
            <column>[federated.048pp4f1pumwnu1fy3788180uqel].[Action (Category Str (group),Midrange,RegionGroups,Remote,Search State,Search Title,Title)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:vtmin:qk]' field-type='quantitative' major-origin='0.0' major-spacing='25000.0' minor-origin='0.0' minor-show='false' minor-spacing='10000.0' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:vtmin:qk]' scope='rows' value='Salary' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' value='false' />
            <format attr='text-orientation' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='-90' />
            <format attr='wrap' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='on' />
            <format attr='text-align' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='center' />
            <format attr='vertical-align' field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]' value='bottom' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f8f9fa' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' />
              <lod column='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:vtmin:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category Str (group):&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Remote:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Midrange:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:vtmin:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Jobs:&#9;</run>
                <run bold='true'><![CDATA[<[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:vtmin:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4942541122436523' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.048pp4f1pumwnu1fy3788180uqel].[avg:Midrange:vtmin:qk]</rows>
        <cols>([federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk] / [federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk])</cols>
        <subtotals>
          <column>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{506B82C1-90FF-4095-9A11-1C3E91EE997F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Regionality Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1300' minheight='900' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
      </datasources>
      <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
        <column datatype='string' name='[RegionGroups]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[SearchState]' new-bin='true'>
            <bin default-name='false' value='&quot;Midwest&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Northeast&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;District of Columbia&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Pacific&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Washington&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Rocky Mountains&quot;'>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Southeast&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Southwest&quot;'>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Search State' datatype='string' name='[SearchState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='45853' id='129' is-fixed='true' w='98770' x='615' y='6276'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='45853' id='7' param='horz' w='71847' x='615' y='6276'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='45853' id='5' w='71847' x='615' y='6276'>
                <zone h='45853' id='35' name='MAP Remote per State' show-title='false' w='71847' x='615' y='6276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='45853' id='130' param='horz' w='26923' x='72462' y='6276'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='352' h='45853' id='6' is-fixed='true' param='vert' w='26923' x='72462' y='6276'>
                <zone h='45853' id='10' name='Pie Charts' show-title='false' w='26923' x='72462' y='6276'>
                  <layout-cache cell-count-h='1' cell-count-w='3' non-cell-size-h='88' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='46982' id='16' name='Percent of Remote Jobs by Industry' show-title='false' w='98770' x='615' y='52129'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='5387' id='102' param='vert' w='98770' x='615' y='889' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5250' id='39' name='MAP Remote per State' pane-specification-id='4' param='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' w='29000' x='39200' y='1125' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4875' id='101' mode='checkdropdown' name='Pie Charts' param='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' show-search='false' values='database' w='12692' x='70462' y='1125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='136' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='135' param='vert' w='98770' x='615' y='889'>
                <zone fixed-size='280' h='45853' id='35' is-fixed='true' name='MAP Remote per State' show-title='false' w='71847' x='615' y='6276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5250' id='39' name='MAP Remote per State' pane-specification-id='4' param='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' w='29000' x='39200' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4875' id='101' mode='checkdropdown' name='Pie Charts' param='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' show-search='false' values='database' w='12692' x='70462' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45853' id='10' is-fixed='true' name='Pie Charts' show-title='false' w='26923' x='72462' y='6276'>
                  <layout-cache cell-count-h='1' cell-count-w='3' non-cell-size-h='88' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46982' id='16' is-fixed='true' name='Percent of Remote Jobs by Industry' show-title='false' w='98770' x='615' y='52129'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8A2F5EA9-76C0-4951-B97D-E592CCDAA030}' />
    </dashboard>
    <dashboard name='Wage Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#f8f9fa' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1300' minheight='900' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Data_out)' name='federated.048pp4f1pumwnu1fy3788180uqel' />
      </datasources>
      <datasource-dependencies datasource='federated.048pp4f1pumwnu1fy3788180uqel'>
        <column datatype='string' name='[Category Str (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[CategoryStr]' new-bin='true'>
            <bin default-name='false' value='&quot;Interpersonal&quot;'>
              <value>&quot;Arts, Design, Entertainment, Sports, and Media&quot;</value>
              <value>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</value>
              <value>&quot;Community and Social Service&quot;</value>
              <value>&quot;Community and Social Service Occupations&quot;</value>
              <value>&quot;Educational Instruction and Library&quot;</value>
              <value>&quot;Educational Instruction and Library Occupations&quot;</value>
              <value>&quot;Management&quot;</value>
              <value>&quot;Management Occupations&quot;</value>
              <value>&quot;Office and Administrative Support&quot;</value>
              <value>&quot;Office and Administrative Support Occupations&quot;</value>
              <value>&quot;Sales&quot;</value>
              <value>&quot;Sales and Related Occupations&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Physical&quot;'>
              <value>&quot;Building and Grounds Cleaning and Maintenance&quot;</value>
              <value>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</value>
              <value>&quot;Construction and Extraction&quot;</value>
              <value>&quot;Construction and Extraction Occupations&quot;</value>
              <value>&quot;Farming, Fishing, and Forestry&quot;</value>
              <value>&quot;Farming, Fishing, and Forestry Occupations&quot;</value>
              <value>&quot;Food Preparation and Serving&quot;</value>
              <value>&quot;Food Preparation and Serving Related Occupations&quot;</value>
              <value>&quot;Healthcare Practitioners and Technical&quot;</value>
              <value>&quot;Healthcare Practitioners and Technical Occupations&quot;</value>
              <value>&quot;Healthcare Support&quot;</value>
              <value>&quot;Healthcare Support Occupations&quot;</value>
              <value>&quot;Installation, Maintenance, and Repair&quot;</value>
              <value>&quot;Installation, Maintenance, and Repair Occupations&quot;</value>
              <value>&quot;Personal Care and Service&quot;</value>
              <value>&quot;Personal Care and Service Occupations&quot;</value>
              <value>&quot;Production&quot;</value>
              <value>&quot;Production Occupations&quot;</value>
              <value>&quot;Protective Service&quot;</value>
              <value>&quot;Protective Service Occupations&quot;</value>
              <value>&quot;Transportation and Material Moving&quot;</value>
              <value>&quot;Transportation and Material Moving Occupations&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Technical&quot;'>
              <value>&quot;Architecture and Engineering&quot;</value>
              <value>&quot;Architecture and Engineering Occupations&quot;</value>
              <value>&quot;Business and Financial Operations&quot;</value>
              <value>&quot;Business and Financial Operations Occupations&quot;</value>
              <value>&quot;Computer and Mathematical&quot;</value>
              <value>&quot;Computer and Mathematical Occupations&quot;</value>
              <value>&quot;Legal&quot;</value>
              <value>&quot;Legal Occupations&quot;</value>
              <value>&quot;Life, Physical, and Social Science&quot;</value>
              <value>&quot;Life, Physical, and Social Science Occupations&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Category Str' datatype='string' name='[CategoryStr]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='28' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49111' id='30' param='vert' w='49385' x='615' y='50000'>
            <zone h='39777' id='31' name='Map Wage per State' show-title='false' w='49385' x='615' y='50000'>
              <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='24' h='3556' id='34' is-fixed='true' name='Map Wage per State' pane-specification-id='6' param='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' w='49385' x='615' y='89777'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5778' id='92' mode='checkdropdown' name='Map Wage per State' param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' values='database' w='49385' x='615' y='93333'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49111' id='37' name='Wage by category (2)' show-title='false' w='98770' x='615' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49111' id='52' name='Bubble Plot Wages Spot Outliers' show-title='false' w='49385' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='124' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='123' param='vert' w='98770' x='615' y='889'>
                <zone fixed-size='280' h='49111' id='37' is-fixed='true' name='Wage by category (2)' show-title='false' w='98770' x='615' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5778' id='92' mode='checkdropdown' name='Map Wage per State' param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' values='database' w='49385' x='615' y='93333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39777' id='31' is-fixed='true' name='Map Wage per State' show-title='false' w='49385' x='615' y='50000'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='24' h='3556' id='34' name='Map Wage per State' pane-specification-id='6' param='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' w='49385' x='615' y='89777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='52' is-fixed='true' name='Bubble Plot Wages Spot Outliers' show-title='false' w='49385' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{78AEE4E8-A31C-4A09-A703-30526024B6DA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Percent of Remote Jobs by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='149'>
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' type='filter' />
            <card pane-specification-id='7' param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Construction and Extraction&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Company:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Location:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Not Remote-OHE:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Region:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote-OHE:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchCity:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Temporarily remote-OHE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{634FCD19-BCAC-4C93-819C-CB7968D94AB1}' />
    </window>
    <window class='worksheet' name='MAP Remote per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]' type='filter' />
            <card mode='radiolist' param='[federated.048pp4f1pumwnu1fy3788180uqel].[Grouped Remote]' show-all='false' type='filter' />
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[cnt:JobID:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' type='filter' />
            <card pane-specification-id='4' param='[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Grouped Remote]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[usr:Calculation_180144016105074701:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F4D3A336-031D-4CD9-8C7D-8316E1D2F0DA}' />
    </window>
    <window class='worksheet' name='Pie Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8181498-A14C-44C7-8F42-E78171E968F0}' />
    </window>
    <window class='dashboard' name='Regionality Dashboard'>
      <viewpoints>
        <viewpoint name='MAP Remote per State'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Percent of Remote Jobs by Industry'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:JobID:qk:2]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Pie Charts'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{C73BA73B-FB01-4DD0-A3C5-3430A96FFF94}' />
    </window>
    <window class='worksheet' name='Map Wage per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' type='filter' />
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' show-all='false' type='filter' />
            <card pane-specification-id='6' param='[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Grouped Remote]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[med:Midrange:qk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Region:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchCity:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Wage:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:Company:qk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[pcto:cnt:Remote:qk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[pcva:ctd:JobID:qk:1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6AB2DB80-6C11-4A91-8D04-B62694C1E0F9}' />
    </window>
    <window class='worksheet' name='Wage by category (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]' type='filter' values='cascading' />
            <card param='[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Region:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Wage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCD46306-9F5C-4097-8E7C-2D65F20ED5F1}' />
    </window>
    <window class='worksheet' name='Bubble Plot Wages Spot Outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[RegionGroups]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:CategoryStr:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Region:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchState:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:SearchTitle:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C8E3D41-F4F5-488B-9C30-342F854732E0}' />
    </window>
    <window class='dashboard' name='Wage Dashboard'>
      <viewpoints>
        <viewpoint name='Bubble Plot Wages Spot Outliers' />
        <viewpoint name='Map Wage per State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Wage by category (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CD7F5DF4-2206-482E-B790-45B0E953A0AC}' />
    </window>
    <window class='worksheet' maximized='true' name='Star Rating By Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[Category Str (group)]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Company:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Region:nk]</field>
            <field>[federated.048pp4f1pumwnu1fy3788180uqel].[none:Remote:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77C6B829-374F-424A-BD22-3EE7BC5CF9C8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bubble Plot Wages Spot Outliers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MAP Remote per State' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Map Wage per State' width='192'>
      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
      8P8BmOldLydh6JkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percent of Remote Jobs by Industry' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pie Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regionality Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WXBkWXrf9zt3zT2RSOx7odC1dnd19TrTPd09C2eGwyBFSkNSNCnKlsIW
      7QiFFY6wwy+W6Qg7HAr7xQ+2QxGibJOyZdNcNJLtITmLZqZn2N3Ty1RvtaIK+w4kErnnXY8f
      EjeRADKBBAqFqu6pf0RFIfOee/Iu33e+/TuiatmSx3iMn1MoD/sCHuMxHiYeM8Bj/FzjMQM8
      xs81HjPAYxwbH//sHW7cmTpklEs+V4LqFj/40Y9Z2SwdPG4bxfVFPvzkJj/44RvY/oldMgvz
      C6zPz/CTt35K1QPx2Ah+jOPiL/+fP0OJpdmau02ic4jus+MUVtbRFZvFvKQvDkLzWFrR+Ntf
      neCPvvcx491xPr5+k4vPXMUp5DFiCQy/jGIIZuY84soq8ZErhGSJ5198ibd++jZebpWi3oFe
      XMcTYdRQCqFViSdSWJaLLG2SSndyayFHb9hDTXSTTkQY6U3yR3/6PV567gJbBZuY7rNZ8hiJ
      akznM/iE0R72Q3yMTy9Gzp7n0qWL/Oj7DqlonKEzo3y0so4eSfDUYDe+UwFspFcBLcTY8BAJ
      w+XC088Sj0QIJxJIBfKZMpFED/3deXR1gOGhPtYXpnAlJOMJLDwG+gaxsiGQJjduzxPri6GI
      2nV09Q1jVXJ0d8bpSsbpjXp8sqUSWcswMDiAYkTpTUfJb63R0dFBJGzw2stfYObae48lwGM8
      mvCsApmSoKcztu9YKZfHTCZart5ry0t09g2gicN/5zEDPEZbmJy9Qwnv0HEVx6fstDeu4hyu
      3Jcdj5J1+Hye4+Fa7qHjpOMibaf++bEK9HOOQmaFD29O8dznX2Zt5hYbRY+IsBCaytKmw6WJ
      Ifr6+qgISTkcPnS+zbLDhuMcOi7rOGTKh6+9mZLHWtE+dJxVsrAK1UPH+aUqfrFS//yYAX7O
      sb5V4qWLvSzkPTw0klEVRAjpVYgoZeZmp3Gk+rAv84HhsRv05xwjA91cmy7QqVdIRgxcdHQc
      zFgvFy5dYKC3i1Ao9LAv84HhsQ3wGG1haXWBqne4auP6Esc7nKQcX+K2M87zsdsYJ30f3z3c
      ppC+D97OuMcM8Bg/13isAj3GzzV2GcGuY6Npx7eLpZRYloXruki5W7CYpommaSiKgm3beJ6H
      53n7zhdC7Pu71RjDMLDt1h6CxrGu6x56b3uv+SjnnhR830cI0fTejwpFUXBdl3vT05w/dw5N
      VVEUhUqlcvjJh8yr6zqe5+G6O67Hw97H/cLzPFT1aAa5EIJwOIznedi2ve8d73qrmqZhmuZ9
      XaRpmliWhWVZuwg8IPpQKEQ4HMb3fZw23GWHoV0DTUqJbdvHuj/HcdB1/cjnHQe+7yOlPPKL
      bgXLsvjWzTmezlf5jdc/j+/7KMr9C37bthFC7JrrpOZuBc/zjjV/tVpF1/WmC8uJL2tCiDqR
      WZaFEALXdRFC4Ps+lmWhqipTU1MIIZicXyJftQGBIsRuDg2utZFpmyyMAhC+RyhsgqgRuyZ9
      1G2irZ++Pbdo8RAbp278Sbm9Kp8EPMepX1crtJJ+B8G1bSp73JUCcFwHRzOY2ioipcRxHBRF
      2SVpfX/HKAwYz/O8+irfeLw+txCEQiE8z6svZM3GnQROQiK2WmwfiFwPHo5pmlSr1fpDB+or
      fzqdplAokPcU/mLZQWoGu8nuaFDyWS49M4Gi63iuQ8rO09Hbe0J3dHLYmJ6ma2joxOfNr63x
      /pqDCEX2HAlDAqzMCtlsllgshmEY6LqO7/t1ddV1XXzfR9M0fN+vqxu6rlMul/f9XiQSQVVV
      TNNECIFlWcCOpD1JZohEavcUqId71ZgAoVCIanV3MExKWVfZFEXZd/yBKrYBI0gpd/0DyGQy
      XLt1F7tU4Gw4xh3raA+scQUDEFLiSwnbKsTele2wuVo91JPGUa7rKIikUoipSXxjRyUM7ksI
      gdPZy+//5ZsMRXQuJCMkNMHNXIXeeJTXLp8jmUjUJYTv+6iqWldbG1dfIQS6rqNpWp24Aj07
      gK7rFAqF+7ofTdPq9kWpVCIUCtUJOWC2ZgjeYyQSqdub4XAYVVXxPA/Lsna96wdu2QXi6zv/
      9oc8dfE8XV1d9ZXl7FA/C8uCpdtLkBo+8ty7iVY2/fPo83w6IaVkL1sF9xUwgUz1sCAECwUL
      CQijgxtlyUff/gF/88o5ent7SXd27lLBAuM/sOcikUh9xQ9UpMAWaDyn1aIipSQUCqGqKqVS
      qaVq08gAUNPjXdc90AYI7JJgfMCkUFPHNU0jGo1SKpXq3z9wBghWif9vNs/b6x9xuUMnbihM
      jI1ydvwMN27dJu2VKDY596CVuen3QqCqKtI7PHnqYaJxZYaTYUBFUeo2TrPfC2wwKSVCN4Ad
      lWIjPcwffjJLeHKZX5sYYHxogB+8+zN60p1MDPaj6zodHR11FWJlZYX1jQ260mkSiQTd3d27
      vFdCCAzDoFqtNiVw13VbHgtQqVT2HQ9UtVZolKyBNAMoFAo7i8BBXqAHgUBkmqrCvIwwn91+
      IQt3Uf1bPGVKosJDcar4+n6PTtvqiawZfb7vI2muZpwkwbWCoii7VL1WaLyvds85cD5FIaJI
      9mrrweq8lzga/xaKgpvuJy8lfzS5QuTmLJVENywWETOfIHyPy6rF61cuU7EdPro7xdPnnuDs
      2bMUCgWmpqbo6+sjEonUF7xAUjRTp/aqVa2ez1FwkOOgURLuxakEwhRF4d/7wlPg2nUd2NNM
      bD3M5PIGnhlpSvxHJohtolJUjY1CFb+JJDgpb87eOcW29GnnN5oR+0lcV2/caPpbnucd+Cx3
      2SWxDsodvUhFgXAUXVG40tPBL736MhcvXMAIR/jl17/A808/iRCCeDzO+Pg4+Xyeubk5fN+v
      /wuFQsRisbodeJJoVIVUVd3lDj/Kszy1bNCrF88R+eEHlMKp+ndGfh07lqaSm8NQO7HDyX3n
      tf/g5C4/ptEzQGZmhu6zZ3fNdZIvIngJwZx1FeOgF3BAcG+vT/2o6O5NMzWbQ8T2P8d20Phs
      FN/jK10hfuWrX8YwjPo9PX3+iV33F5zT19eH67rMzc0RjUbp7u6uM9ZJBfYCnV7TNDRNqxu0
      4XC4/uw0TcO27bZjTKfGAIqicK43xbX8zndqJY+GT9X1qaoGdqmEKm0wk+i6Qnb6BuHuMaRb
      RVV9fDWGpoJmtgp+NTxkISgWK3TaNqqxf2U8CbQi0qMy2V7GLGXXWV7eYuLSE0i3Si5vU1pf
      pHNoiELeItkRxWySm6+ZJsJtHYltWz3zXH77bDevXbncckxmM8s//eE7kF3j7/7ilxns70fT
      NMbGxigUCkxPT9Pb21tXi2KxGIVC4b49YIEKFRjlQgjK5XKdOQIHS7sMcGq5QEIInh3q2vWd
      1AwGIyqZ3gu4roddzCLdHJWCA/gUVpdRVEmlVKS0vkp26jq51bW2f08ZGmdmchrvAMPpUcTy
      1D3CsSgAi3en2Vy5w/LsEtd/+i6L924xdXOyqaNLUdVDDeHDiF/xPf7WSKpO/M3GT87O89/9
      8H1M0+A//Tu/yfDgIIqi1D1B8XicsbGxuloUBNPakQKqqmLsWbCCwKrv+xiGsc8TFARYHcc5
      cprHqSbDDaWTDOdn65+tjn5uxcbxQjG8co7M/CzVrQ3ya0vYpTzhVBe5xVlyc3eJ9I8TS4bY
      XFpuMft+1UMoCvrAKIuTh7XueLSQ7u9nYXKScjFPLrPGxuIyroTU4Bj9IyOUF26w1eQ9q4aB
      Jpt7wAJb4CAYrsXfOdvFV565zIe3Jnnnw0+4fftO/XzHcfj2W+/xP757i7wneTamcvveVD24
      FKhxASP09vYyMDDAwsICuVyu7ss/CM0klKqqdRvL9/16YKwRwbu3bbvOBM3G7TtvVzq09O87
      F+gg2LbNf/2Hf8Y9JXX44CNCza1x+cXmItstlQgVM6T6egh3dBw+mXS49fZbmN3jmH6etcU1
      tHgU1wFRWkTvusTEU09gqEfXazOzs6RHR9sae5wA3RtvfoTfc4yYSmGLr3QaxBMdvHFvmSVb
      5euJKn/7b/0qW7kc/+zH7zOXr+An0yAEolIEVUMaISZkmf/sV7+6y8s2NzdHpVKhaDt8vLTB
      U90Jrjz9dD0h7ShJc4E3SQiB4zhEIpFDVZzAMC6VWvUhquFUSyI1TcPJrED3yTPAgb8bjWIb
      Oktz85w9hAEURcF3IJTsRFV8ugeGmLtxk5Hz57l77SPOnT/P6uo6dz+yuHT1qSNfy1FY5jgM
      EDG0pjGVw+BuZvg3Vi8sbwIminT4Tgbu/ot/xbIUyK5+6IjWx8vwTreGuyLCH37nR5zpTqFZ
      Fd5ZL3DT1UGtkZdquQzrOX7w45+wki/yza9+eV+g6yA0OhZ0XadYLB66UHueR7FYPFTtOlUG
      8H0fYZh0Onm2hImvnaC00XS8ahW1RXao0HQikcMzR33fByHwXZfeng6qts/glReJ65KLL7xA
      Ih4mPTBAvvTgo8fH8VgNd8e5acum3qYATY3hPeN9VcdXde5I0Esb6O48IpFCRPa3KQF4s6rx
      5nwB4VhIPQwNeXmeGeZPi4Dv4eVcfn07YTKIDwSMHhjIjUQb5C0F6k+xWMQwDBzH2YnmbqfZ
      70U7NsepS4Crl87x440ysUoFxypSVePbiXDtQbj2Hk+HQAK+olHNrBEdHGl6nvR99HZTaRWN
      8aefqX+Mb0uNeP2bMOnD1cv7xnEkQMjQkIVKLSlOOizfnKT30iXKK3OUSy6G6iD1ENV8mdTg
      AKFEsvYbXmvvjBPtwgGUTB51dQ0jFoJooikzSH1nURNCMCYrrJUqlKMplGoZ0dHF//Stb9Pd
      2clvffFlkslknSGDeEWlUqkbzrZt1yVFQORBcDWA67r17NWj4tS7QlQ0EysegjgoUqJNT+Ek
      WmdtSinRChuomkBRFdRIGBE1kbvc/jUiKRRLhB0HpdmDkD7OI+IN2phq0ygP/Oct0j6aoZzd
      Qhq9tWfjVpHFBXL583iFHFbZo2N8hMpWhmqxwObMHZLD59Cz69ix7kMvxw8n8Eng+B7qxhaK
      tYgxOICI1JYGtZgj5DvomsZvPDWOAkyMPEU0EuFbb7zF2dEBdMMA0c3Pbt/F9TzUbaIPUiPC
      4TCJ7cQ8z/PI5/N1ydDKhappWr3gZS9ztEKgVp06AyRNHUo1QhRCoGgCpZIH38fQfIQAz3Zr
      eT2GjhCgjAyBtvummr3+Mp2szszS/8TEvmNOIU//QD+rU9PEUx1EUqdrhzSia3y8rXGNOTzt
      wHddZrIWShAn0aP4eichtUJV01BU2Ji8Sah3jJ4zSaz8Os7CFLLvLIgjOAQVFS/SgRfpgKVl
      jCEVRdP5UneYhBbl/LknODM0iO/7/MV3v8cLzz/HG3OrvD+9wDeeucgrzzzF6NAgS4uL9Pf3
      17M1G+8z8Po0S3FuBnW72m2vcRx4rwJpGhTGBFLn9PsCuQ6N5KuPjKOVi6CoiFAtuHPcWigp
      JYbW/Gw9nmRuZgmtqwdreZWRh8gAR8FRIqiKpmFIFzx32wBVGLr6PADhMxfZe8fRrh6kY2Ev
      LuPEuvbN1w58VQfH4cm4zi+98hKqotRToxVF4Wtf/hIf3biJHYpRDcf4P6Yz3Nz4CV+7cIbx
      8XFWVlbY3NxkaGhoX8Q4kAhBqe1hCFb/wMMU5CUFNQtBXUpQ8+D7/ukXxeeauKJFJFYn/vuB
      KOVJdKWbHlM0DXNwBNUMYWsm3gmUYx4HR9Hoj5O68eTVS0Ty7QULAaQv8cXxyy+9cJJQZplv
      XDzDD974SV39qFRqhVDXPvqYP7i5hB+qeZCkbvJ+VeWfvHuX927cpn87glytVuv327iK7601
      OAxBJqphGJimSSgUQtd1dF3HMIy6waxpWu3zse/8GJBSslGqAA/GggzZJfR436HjjO4+lu/N
      MHThiZZjZm/cwUNF7iFZgYB931JLRdpVUykbD9VlnpXdaDsOcBzszSk6dLxrH8kJsReKqnJ5
      qJ+3b89weWS0Xj+wsrrCW7fuUVhZxEs1Ufk0HceprdSJRIJyubwroa3R9RmU2bYjBer3ta1C
      qapKLpfjrQ8+IVuxMTQNX/q4no9frZw+AywXqxA7eQaQVpV4vP15HSPExvwCXcO7yxNd28Z3
      Xe4t5ii3wUxHRaikcvGQMY159Q+qzraO+6ydGDE9+ru6uL64zm/9wheA2nt+4+Zd3ixCuGCx
      T/cCpBDcy5V5mZqrM5vN7koPtyyrrrqwPSZwfR4mFYPV3fM8pqen+V9/8jGregqUgNG3F4iV
      ldNngKLzYDwx4XKW+ER7xiWAmupmc2mORLmMU6mQ39xCAIVcDhFN1DqIcbrlkgGCl/wgOywE
      EIkUZnkBp5rHDSWOfL7p2fz57TX+0Svn6qt/qVTirUwFGU9RHmnN7iWrZpwGOnlA7L7vU61W
      sSyrrsIUi8WWdb17EZQ/zszO8s/evEXGTNee6Z7FRDltI7hSqdSjgycJKSVh4R2eirwHRk8/
      M9OLKJEoenqgJmq7BmtBmblN4OQZ4NCZ3Co3rt3gieeeRcdna30d4VURkTSl7DqdPT1NM0Hv
      B2rfEGqlhL22RtWIYds+XjEDoRTRZJz8wl1C6QHyK0skujpqWbkaaEaI214Uw8nz5BM7aeeb
      Wzl88+BrFL7PeGonjtDo6iyVSvXPjdFc0zSbplA0vvcgdXtubo7/7Y0PyJhdLaWo0NXTZYBS
      uYzUTz41WQhBNpzGXFki0j/Y9nmKphMaaJ43E/DRA1dB9qC4cI+qFkVTYGtphtmFDMlEFLk8
      zd15hzODaww+eZWwecKvLhxF7+vHmp7C9hRUJKXMKtFkGD2coLy5gV9cZaNSQfg2oY5eUtvd
      LYYS4frqL6XkWx/eBuPgqHuPXeAbn3uNtfV1OhqCYY7j7KoYa1zQisXivqzSwOgNagQAbty4
      wb98432Wo4MHLl5eqXq6XqBSqXRfBtdBkAiUBubKr8wzd6uWybg6eZ21xRVmrr3N+twsSzNz
      lHJbh8x4MkUcR4XW2Y+Wucfiap7sRobN1RWquQ0crZvnnz+P7TmszS8+kN8WZgg1ESZ/5wNc
      q4pbrWCX86ze/BhFEXiuS2J4glgyRKYhK/eL5wZ3RWkL1sGJbkNeiX/4pRf5kx+9yX/5gw/4
      s79+F13X6y1aDipt1DSNcDhMNBolHo8Tj8frRfZQ6zYyMjJCXJX1AqXWOGUVKJMvwAESYOG9
      H6Mn++g9O8rKjQ/ROwZZv/0hnYN9uC50jJwjkog2PVeUC2idPfXP5dwW5XzNa5Do7qVccajm
      i+jRCuVCgdLqImPPfx79AA/gw+gWEUp08vQv/FLtQ+9znHl655iiKKQGTr6nUCMiA2e48FqE
      oh8huU2IY1/4CgCJ/m1pGb9MvEFwKg0E6/s+W5Z7oKMvZuhMrazyvbUK0gzz7vImX3v6AqVS
      qV5A04wJQqEQhmGQz+fJ5/NNx3ieR1dXF/G+Ydg82MBX8E+PAaSUXJ9fBpoTMECir5/N1SyI
      MbRwJ5qXw3VdzGQ3cmOe+U8+4cIrn6vPdxAUTUfRXKqlIgs3r5McHCPc0YmZSBPrSLE5fQPH
      4wAGePRapRzWGAqgnM1ieBYdpfVj/47nlSi7Cr5xuK2huhaXx3bUTiEESUMjd8A5tzyDW/cy
      YNTyhio+bG1tMTAw0PLegkKZ2dlZEokEfX19rG9soGka6c7OugRwXZc//Ks3+GCtCNrB1y87
      0qfHAK7r8t5mBZKtGQAE/ZefwS7mcSp5wsMTnH99FM3QiKR7iWxuHEgAjQtCz9kLBPLgic+/
      XvtjZMf/nuxpnX/UrurzMDxEh/2uZpqEkx2YPcd34UopyX1wi3IbDDBgSnp7diSvEILXxvr4
      3xcOScpWdlYeGYmxurbGyMgI5XK55fMPCu3/z++/yUebFlU1BNKnS/M5m46Tr9qsFausK1GE
      HkE5xI0slVM0gpeWl3HCzVNpAySGtj0JoTT9T+6O6OoG6H39J26U7m0ZAu2rPschfulLlqdm
      9n0vtrNadz7v/WPPaOnTNTyIquu78+XDYZD3/4zcA7JDG1FpsiHepdEhxOT7yPBBi10NQgh8
      VSfj+PXWKXsRpEoHxTDLW0Wq4e76e1sD1jY9QAUlWl8gDn0/8hRVoIVMdleq7KOCozJUaf4T
      RNclygvXMTp6iURNNu7dJjZ4Fs+xcfPLqOEeYn2DaE326ZRC4KROJsA2PbWALj2qjgtCIRHS
      0FWBlry/PCchBPGwSsb3dq3UzZD1VNbW1+np3skmTSaTFO59TLbi0nXlFbzsPOszS3R1CbyO
      CRY/uM7QpXGS/UP1Ivf+RGJXPUBAxIqi1I1c13XJZrNcGUgxv7G/rYyV38Cqugi3TNUWdI0M
      svLJNWJD58kt3CHe2YkvVYxEF5FEDHGaDPDcxfP80Ud/iexonnTVbCV+uGguhqOpDvKegh4y
      8D2JFomC56PHU8jNZTQjTDG7iue7pEfGajM9IFXJ6OkHIFBUHCA/P42fXyE6cua+5u6/MIF5
      6xZreW9HOsm9+R4CxbNR9zCJZVlE+4bYuP4BnitRNR0tHCbek2KLTroHkxRW5vE8QdfIML1u
      mZHBi/i+j67ru3J/giS2+fl5FEVhvVDiL1Yc5J6kRykloWQ3dnUBLRwlHNLBzRHqvUx+6k2y
      62UiyTR2cZ1irkjk8pOo0j09BvA8D6EoLU3LVq3rHh6aX0duPYujusiqTSSqUNrMooTCOFur
      FDMZusbG0JM2dnUnoes07yk8fIbS3Mx9z6OoGukLF7Fn5qh2tJZYaqWAYexOVZ+cm0fGksTH
      n8GgjCt94t19ZDey+NoiqTPn8Uo5lFia4comf+/1F4lFa+qSYRi4rsv6+nq9KEbXdSKRCH/6
      1ke8tW7jq2bTGonS2gL5jQwhHUSkEz3UgZubpPPS66TsEuFEHKvQQW49A4B2moGwSCTCWFhl
      Kr/Z9Pj+2xE01oI0W49lPc1MIsoFnEIIr1ptWKVkq8kPRSuiTZ7ZXwcc7ayJ/0RvLQdejzyo
      dL/2oIZCeFYVtWX/pPYgVJXegT4WF1dxU82dBl44zrt3pvjyc1eAmkr5revTKKEE6eFaoYwR
      iW0/j505zHAEt1rhN66epzOZ2EmiW1nBdd16lmihUOBnd+/yydwcb89WYJcavfP+AcLROOFo
      ULdX+75r6CyYKmw3ZDMTnfQkag2A9XL29BhACMHT/WnuzmZ3fw+0olAhFKT0SZQ3SQ4M7D9O
      Q15mZxR8r/ZvrzUpd/7OLS5RjKbrn+WuQaL+vecfnWseFRUu1NNHaX6G6PBY/btKdo2Ko9HZ
      k2Jl8japoSHWZpfo7E4gQik01cdokpKuhEIo/sH+9LfnV/nyc7X7/6sfv8ly1QV7jyNU06Fh
      7wIpJV9OKqjbqcnFYpH19fV6j9Fbd+/y8fI69+ZnOfPsM6TPneOL6Uz9/L0L4t631Xh8fn6N
      u+XwrjQcgaRvbPh0A2HPTpzhX89v7eoocBACklSpYiSO1+5vL5RcHhmvrQZCiKauMikliOP7
      0R8J7JFg0x9+QN/l58HJsbG4hq+FsNYXWawUwZkimh5i8Oz+eurSwhxWsvvAbhYz2SLff/dd
      NioV8orghdH9nTfWZmbJ2yEUUQucKapCJdyJ5bjcunWLdDrN2NgYjuPwx2+8yaxiIrQwbDOl
      EIJY1/GKdp5IJpn+4Sd48YbzPReh6afLAF3pNJpdPdQduh8PJiWhsantrgaxDwknaQMphoFb
      LtWMdCCaTLKxMEdYJPGBylYW17Xof+Ii1vwN5uYXdzHA1twcJcfHMmMI7fAa20VVRUunW4Y5
      Q5tZ1K7dUex14E+v36FT1xjKFbn93kc4CLRU+kTfuKrrXBlP8fHdVZxkTQ0Tro3QEqfLACur
      q7ihw33D+3CCNmQjfQWtu9tqGXgKXqrGa5i59lPi/WdJ93Uw+c41Ri9NcOett9DTvWgCesbP
      E0+2XkjMrl6qayt1Bhi9+lL92NNf3OMhuvgcPXuyll1fYnW0t8WUhAPbsNTQ/LjRO0ARuCWB
      VNcDI0jL8zGHBlDXVvErFsI0wTplCeC4LuzZ/fAkeuPfDxqZIIAQAiNqYtiZfeO1cp5kd/Oy
      y4BRD6SFdIjS3HTTc4WqEhmqrcJWsYC9NE+6r4vUQA+KYRJPxDB7B7BXp7h97WOe/+LnW/6M
      omncz8phHLFK8tDo+ennFdZhl8vMFiUkwmjDYzBzi4RfZlg/xVQIKSVv3p3blw3aXtPUJj6i
      E1IXWvXPV/qb9xdSM4ukxs82PXa/aGSMoUtP4ogw1cImxfUNhFARiV56+9M43V1E1w6u+5VS
      4ts2nm2DqDkUattp1lxr0vORvof0a/+z/VmLRPEdh62qfwRX1oNbvPwTKKBaX1yGbbsPq4rY
      XGcjNcTtnH26cYD3V7IQ69x37FgpBSdZpPLIxB52EE3v+N7HrtaeWXo758wwID10cN2DEALp
      ubi5bM1Tts9Nsp3uHfyvKCiqhr2ZYWM9gzvYul5632+d4KhGSN/HyWUPH3gI0v293Lu5iJ/q
      gVKOX/r8czx57glGR07RC6SqKmPxMJ8ck9ZOI0gWlNKdBI53vSerJ0SHxnBKBUKd7XtP1FAY
      p3C0jhnt2QBHh+86+MdwR+9FKBbjqeEOPtwoQ2cvs77Dr47X7KBTjQP8R9/4Iv/k//0h88rR
      S/pOgwFOivjhmJtkFLaQK3NtnrD9v2jyudEWKRZxVA09kWyLSIWqIqR3JKVG0AbrHoNBystL
      uE12DToqrGKJewsZZLwHAQzEd+jvVI1gXdf53WfP89++c6dlyVwrQn/YLsoHDSEEHT1dDJzb
      39XufpGZmSG76WKkD5cEQlUJq6K22Z5TZOHGJB0jZ9FkibXpBRL93WQXV4mEffTECInBAYqr
      s9y7BU88eYHpj94n2jtCZuoOsa4eKrZPOp08lmwrlB2kVWXhZq2yD99DbUi7kJ3zVTEAACAA
      SURBVL5Eug7Kng01fM/DLZXQwmGymzlyWhwn3V+3NYc7dor/T70zXH9fL0r5/V0bOj9GDQ+q
      AtNyXPR0ey5NgJ7RIZbml7HjHagKFNeXMcIGfUOd2Mkhkg5IJ0dxYwnPdwihUtnuw7+VyeBh
      s5Xz0aIV7EqFxfV5Ir0THKUYtriyQtY18cIpMttBZTW/zsVnh8lNTVEou9j5HHasi9E+hWh/
      Q6aAlLhLc2ytrCEiMZyunWNjssLzl87XP586AziOgzigM8SjaJB+2tF7Zoy71ycJDY+1Veyj
      6Ab9g30sLy6hKpLEwAB4LusLS/RECphDo8hynnBnFavqYzoK4WiUcrFA/8gIvpGgj2WSg2Po
      isf67BRam5RW2dxkYWoRK9SBb+xxQ0nJws17bOmdEIIeTeBIn63lVYxIBD25HYFemCZmValE
      o0S6uhn0i3xSFXSaGn//1av16jF4CAwQjUYZjhjMtDn+IN2/vLnK5maZoYkzLN/6mFBnL7ml
      eeLdfViORzKVIJpsvSFGaW2BYr5K78QEG3c+ROoJoiEfW8TwHIdoMk5obwrGA+TPBzW1qmkM
      j/azuL6O2dVz+AmAappEFegeP4/YLmwZbKwziCcxSBIBQlmYuHSutldx7ELt+PDOqhtPPcf8
      9ZsU56bREx0YHc3rFcqrK2yurFNp0ZDMS/YQtDIwSpukzw2hRWP4loW1sYpbKhIeGCKkKlRc
      F6OzB2mYfO2JEfpu3+H1F6/Qsyed4tR7gwoh+MJ4bUVpB1JKclqMwurqvmPrs7M4Vq1JklUu
      sTF9E8uBlalblDKrLN26SZOCpTqsQg6rWNu2MjU8gh4OU9lcJr9VppJdZePuLdwjmB6VrXUm
      3/oxZcsntzTL/J17rE3eYG1ulqmPPmmjE8WDg3aMra8SAwMMRQTa2sGGeUXouC22PKrk82QX
      FnA8SXTkDG6lRGVpAa9aQfoe1fVVpO/juy4LCxmyysFGr5SSRH6esdEObF+wtThNoWwRGRpl
      afIG5VwON18gv75ExfKwKxW+c3eWL730wj7ih4fAAACvXnmSb/REtjtFt4FwlHVpkp3f/SKS
      vT04lkW1VCSSSJDoHyesewxefpGe4RE0qgcygKLpCFXFLpco5SokUjGsqosRidIxMIyKxVG2
      FAh3dBPv7SdsKpS2tqjkc5TyW5Sza1QKRVbu3ia/VWh/whPEcVRL1TDRE0l89WDtPS0s9BY7
      82yurJMzkmjDta59kf4hQn0DOMUC1dUVFDNEZXmBysYath5FtqhDllISyc5jljIMP30JzAjl
      XAakJLuyjFcpEIslydy9Q5wCi2slFj56j5WpaTarFsVi8xrl02+PTk0K/NorL1D4q3/LT6qy
      lsKsqAdbgbrJpkhhzy3S3deNYhh0DIzRsS1pQxOXan+MBP064gcWvgN0jJ4jUJCM7ZyZgee+
      WD8ea1NdaEQs1YkAot39RKUPopbq0RsK4XouQh4vspnLbJDc9uJsTN9AhLvRYnGkXUJWS5id
      A0RCB7zOY9pW5bUV/FTrzTNClRwTE7ubi1ULBcxYjLX5JexYCnXPhhVCUQg1PFsrt8XkvUXy
      DmgsUCx4DFw8x+1v/990P/UFiouThDQQo6PENYlqhihtrrM6v0j/YDeKolItFpj98GcMjI/z
      nffu8nd/7/d4+83vM1d1idmVXSWbjXgoDAA1JnjhzBAfXLtHfGuFDV/FEwokUvix5nq70DRK
      Wif24hr9PR1o0aNmlT54xFK1qG2y++jMcxCyi7NsrG8xMhDjgzfeQPQ+xWCnRI12Y+dWsec3
      ufrSM4dPBGTnpyhZgqGJM6zc+QRPjWE6axREF4r06OhM1BeP2MAQlakp8maytu1SA6SUJCub
      +G6cytYWErCrVVZmF4kl49jRDrTw4fkUoc408s48uZUNDOES7p/ALmQI94xhbS7gqWGeeeUZ
      cLLcnS5whlqPoie3+xQFmVkv/L3/EGdjlacuXOTl8+OoroU6t8SVns6WW6Y+NAYAuHj+PL/f
      18cf/Ms/JtM93FYfGgAnkWZxLUN/l48RP3pD13bxKJVoaoaJHongKFG+9M1vUvTCLN25yfDE
      GHYhxcpy80q7AI33UdjcpOII4AyhSJStzBrLkzcwRp8nolRZ3ZhH7+glsq35dI+PE11dYa2Y
      w4816Oiug1OpsriaRYslkNUyIhQmPHERX1HaJi49GmNktB996Pyu70eerzFhD1t0jY0Co3Qd
      kKFR23FIZ8WyWMtkmBgeYqNq8/ILL7Q856EyAEA8HqecSBPPLpPpbb+7s5dIs5TN0+d6hB7Q
      bi+nzwCtVcChC082fIqTBJLbLzZk9pA4TF1raJ3SNTzE+mqOaqlIuZAj0jXM8xfOkXdjqG6R
      7Pz0voZhkd4+ovemKJDcnk5CZoXI6DhG4GkLFiO3ytS1a5idI3TEBfOT83T2d1LIW2heDrNj
      lPTIIHrDPstd42ew332HTHK8rgoLp4pW3iI23CL7ttltKgpIScg0+fZ7H/Dq5QsHbpj90BlA
      URTODfbz/dzRI71+NMFysUiPu0b0BFWOYJOJ5tHnR0MiHBWNVx3p7GO0s+ZqHLi4ozYlTIAO
      osmrTedQVVFrMZ7LIFyH0Ykx1GbeJS1EorOL5Mggmfl7jI2mmc0pJOMhpGWTW1vE8x0Gz9by
      cTzborq+Su+TT+LdnUNoGtKXpJImsUuXEIe0ZgngV6vYq8tolRKKonAmEeWZSwfvxvDQGQDg
      F65c5Ob332ZVmNiuRS6TIxLWyG2W6J04y9bsbYSZoLKxgmKYKGaMWCpZ2+IzEmO1WqJ7dZV4
      7+HRTmFXMbPLe7/d/Ve9GH8/scv8JlszTfL5xZ66Ypqfv+u4lKjSQ9F0QKKWC6ycUDR4bwcT
      u1yG6P1JylgqRXXyOn1PP0NheQlN16CFlAwl06hemXhHioXZJQb6U+TyNt0D40S7qlSrtcXF
      sy2qK0v1Ni4jVy61/P3DJLISChEaHCG0PMfCwgKvfu6llmPrc1Ytu2EvH//QHbgfFKSU/PPv
      /Ih3qhpby3NI20cKn86RcTbnpgGfcMSgUpaUs+vgu/Q+9SL6dvMpaVXo0VziPQdLguLcDLHt
      fj3Hwdb0PTYT+wv0jwMpJT2lVeKj99fDpx3YW5sgBMZ9Ns1qLLYXQuCWSyihcK3GwPfrm1Ao
      moY4YIMP33Wprq0gHYfoyNiR80AOYgZnbQWpqnxtpI/PXT3YMfBISACo9Q792cI6bjhMdmaK
      RN8Q1XIVq1zCr+QQ4TSuq9I5MoAZCVFcmsR1ZJ0BhBlm3baQq6skWkgCIcTDLEzaD+lTyWzg
      HaJVCd8neWb8yESyZxbc9RVE+ZCenc1gmOjpHjavvbtN1NvSTkp8q4oWS9S+F2L7EkW90EZ6
      20U3BNK1Vnvgb+8LLBSF0uz2vslCUN5Yx0721OwV30MgD3hnjS0/diABISW3c2ufHgbQNI3h
      zgTTSpQzn//irmPm+d03Ee3qIdrM6DNMNhyBvzBPx9CejS98HykEKI8OC0jXpZjohfghm1Rn
      VkkccfebvdDicbp0j46ho7dXX7hzF8eyMBJJYmfP1b8PrudEHAVSYhfylCoe/n20jhSbq8hU
      D/rGInfnFnBcF/2ARKSHEgluBiEE/+jrrzIoD98U+UDoBpt6ks3ZmV1fF6YnqawsoYXCD2Xj
      i5Y4pUsRiorVxobTe1FYW6NSrmIvzWF275asJ0H4nm2xOXmbhbvTLKzn8bvvb/8DxffoWbjJ
      i2Gfr7z6CtevXz94/H392gkjEonwu89dRFRK9zeRprMVTrMxvWOsKoZJuH8Qs6vnPl/cg6XY
      lsx5n8QmhMA7xuuO9/QwceUyBl69w8Tuyzr+dVW3sqzNLZDtGMLu7IcWfWOPAi/dx9rgBd62
      Df78wzvE4/EDxz9SDABwZmiAf/D0KKpVvr+JVI1ctJv16Rmgja4Fp4Rd13HKQTbbPl4aRnZu
      DjeWQrSb03wICqurLN2bZqngUEkNHGgsHwXCqqJsrqGuzuHHUrx0/ixOiyS9AI+MDRBACMFz
      ly5wa2mNHxV8uI+HI1SVfKwbOTNL9BG50/0rpjjkOPUWjsHI3PIc+bzN8PkJFm9cQ+oxvGKO
      cGcXrlRapoEfl4ALuQLm8MlUquWXFtmwgIaGu1JKRHYdkHieQy5XIhwPky84NTf4zG18PYKz
      lSHc2Y1te3U3eCOkYSIiMV7tCnNuvJ+zg/288847XLhwoeX1PCJksR+/8drn+PBP/oKtWPtR
      wGYQikIx1o27fJfog91e6xiQLfwYB6NayOHLmru6b2yUza0y60uLuD74yJb7n8lj1Dxb5TL5
      TBZdmd93zHfsPV3j9jYjlji2g1S1eg/W3EYGGU2CtQRSktAkvako/VfHUTQNp1xm4e4kpc0s
      K9stUSLpHiqFHGXLozx7Dz0cxdpcpqfBDQ6glPKEttaoKglG+3rI5fN8/etfP/D+HlkG0HWd
      jmiYE8mgFwI70Y1TLKDHDtYJTxXH1IDC8ST5lWwtlSFXoas7SXYhSrx/CFMTrfc/O+LOMb7v
      c/en75J46nmEuj8aa29lQRGYyVTLXVlmb03iNbZXj/fWJVkyv8LVZ3dHaqVnsbG2Tu/wMNWl
      DaKFRRZvfkQqPYSuVfDGnkbx7W03uI8e7BNQKYHn1NyqUiGZSNDdRi/RRyYQthdSSv78jbd4
      Y24NqWpYQkVGjk+8UkoSW4t0T7Tf76YZtqan2Ez039ccAfxqBbVaarlpSB2VEmnFJhyNoIXD
      KMbx3pG/PMvYpfOHD9yGU60yPb1IqK95D6Lq6jJGums7kt0cS3enqKZ2P686s1QrjGkVRs6O
      7EuZbgbXsvjg1vxOd+8AvsdTXo5/50uvkOroQFGUtm2+R1YCCCH45usv803Atm1K5TLf+ukH
      vFU93iULISioURKZDcyG7gjzH7+PEulk8OwZVj76MWr3BbaWl4kldYQwiKZ7D+zBCezuniCq
      LF+/TmxgEOlryMpqvXuCpu55KVK251QKR8m4BmKzQLi6TCKdwkx0IKWPegS37lHcAI5lce/a
      R0TO798PIYBnWwcSP4CpKTQ6X3e1oAyFmZEhzLkFBs4eHg3XTJNnLgzzwe0FipHtBmuVEl8f
      TPLNV//Goec3nfNYZ50SbNvm7ffeJ5vL0ZlI8Ltf+QJjH37CQr7MtY0ixb1F0wdAug49pr+L
      +AFc2wKliltYZfbGbejW6EmB46Rx8itsbZW48OzTLWbdhmrUuyf0nTtPYrCAoQty2SLhUKTe
      PaF7bKzJyW2SpaYjE52UE52UHRtlcQ0pJZ2qg2aYmOkufMtCC4VQTBPf8/EtC+l7+I6NmUof
      yROWmZnFGDpzYPS5HQ1OFwdvQCiEYDbv0l0uo29nbR7UiFgzTa6cG+TD2wuUPIG6ucpXvvGb
      bVxJczzSDGAYBq9+/nP1zdIAvvRcLSrc/eY7XN/IcVu22WTLtjBj+xkmHE8gwglcJcrzv/Jr
      VLwQa/du0zs+iltMsb7SRms+Ra13T3Asi0iqB9/KoYcixHu7690T9kMezwzQDfyOWvQ4UymC
      ZqLcm0UI8FWDqPCo+ALfMGsVaZpBx9YUnXp7v+b7Ptn1DNHLzfujBlDa8NDp4e3S1wMkhZ3o
      5t0b87xweRQ9HDq0B5QC/PrlMa6eO0fVsuhIHr951iNrAxyEUqnE0soKZ0ZH+b/eeJs3ttzd
      u39s97tsfJBaZpnBsUHUY+rPAU7UBiiXUJwqJO/P09UutOIWen6dl1578cBxdrnM5Me3iJ9r
      nZkJUJybJtZkM77GRDXXqjK/sH64nQNE8ms8e3lsVwH/3ncpfZ8JIXjpySdbTXMkPHKBsFbY
      3NykUKgVlEciERRVRdM0fudLr/CNrt2bpgUPv1HkRzTum/gPwvECbacbCHNjHVTMwx0Jui5Y
      vHeTxelFShtL3Hrrp2zMT7Fwd5rZa3/NynSty4PSIq7QqOaoholit5eCUYp2Mndvdt9cjfNl
      79zhxcuX25qvHTzSKlAjOjt3ukrn83l8t+bTFkLw9eev8N0//z5eYnfn6WD1ACihk9jaxOjY
      3536JPColE62gw8+ultrmV6veZA7f0uQvoehmvQ0FLTcmd/EVAWJWJjc2iKu55Bqo9WbEALD
      0Ki0cV1C1Zjzk+iT0ww/sSNZpJS41SpGPs/ffPnlE43qf2oYoBGJRAJvm+CklJimyUBYY9b3
      av3frQrCdUjoCp3RCJprs+aW0cI9D7XOd99v79t393SwFTlY5ZJSones7ypoOfvEEBurOToH
      eol2ValUfITSXmpFRBNtMQAAusF6IUtjLq/vuoiFBX71a1/btYfwSeBTaQM0IiComdk5cvkc
      0UiEzlSK0HafGiEEhUKBb7/7MxZ8BSPdvYsQj8oMJ2oDlAoongOJByOVmiKzAumD042llBhz
      txi6erXlautWyrilPEvT0/RevArVTeYn5+kdG2BjJYNBqV77KxyL+cX27AAA6dicM6vEwwbC
      tnntiSe4MDHxQPK5PpUSoBHBQxkZHqJSSdeNJdd165tvR6NRfvNLr1EoFPj47j1uZXLkjAh6
      PHHsLZoOehmt5tprmxzTB3Q6sCoHSiivXELVbQoFn+hWFulWGBtNU9BieM4qRiJcr/3tHeit
      bUzT5k8L3WBlY41kOsJXr1zhzOjoyd3XHnzqGSCAsr3fbLm8P4s02IYpGo3y8tVneBlYXV3l
      49l5JnMlnGQK1Qy1LRUCAvZdd196gVydrweHWjJCcM2+Dz0H7/Ry4ojGoZiD2AGuw2KO9PjZ
      g0saHQejc5iuvgymIdBjNVUp3bVFKB6jc6CPWFeVStWnsrlJoVKmsjVH1+gIm1M3UCKduKU8
      ie5OCrnqvj6sJSXEC0+cf6DED58hBhBCoGlafdXfeywSiVCpVPA8DyEEPT09/EJvL1+RknvT
      M3yyvMpMqYra1YvSJO+lca5AhXqePC+f3+0GdM+m+POP77He0f9QN/9riVAUNpZbMoCUknhp
      g8hY6wgwsF2NKBm8tNNBYmLbwZDa5mkTiAOFpUXsapnc8gZdoyMY4SjlchkjEsK1bSrZVSrr
      i/Q98xLaNs89G/K5erH9tI3j4jPDAFDb4sg0Tew9OeCqqmIYBrquI6XEcRxKpVK9/cnZM2NM
      jJ/Btm1uTN7l5sY6KxV7R0Vp3HGlkEN3awzQN9bDmbGxutoVzPc7kQh//N51luO1CqpHjQmE
      biCtCpj7DUpZzBNvJ4lMUfFdpy3XsiJ9QtE4kU6wy0WqxRxCi5CbmaLz/DN0DAxTmLuF64Jm
      gHAdXn/h2WPd21HxqTeC98LzPLa2tnZJAV3X91UGSSkpFos4Tq1Br6Io9X8HeYqklLiui67r
      ta4Irou73UE32HQ7UMX++ff/mploz31Jgs2ZSTpGJhC4ZBeW6RwZoZzdwK1UiHZ1I1Vzf45R
      O1hbgJ79+eFieZah0YHt5yd30pUUZVcrSiuzjhIKo0djSM/DcxyaavkSyitLbIS7QG9vi4zu
      Uobf//VvYBhH2VLjePhMSQCoEXIoFKK63XUAaptyuK6Lpu2OFjcSpe/79ZX8sBB/oEYF5zUy
      W2B8h8Nh/v6XX+Zf/OhtJkUUjNDRmcDaJLu4iu0qhHSJJl02l5corK2hVlfYWhugc3SUWOpo
      qQBy27htxjZ+Zy/zG40drGuj9PwGw1d2cqKEqiK3Gb+8NF/rAdrCaDbjcbStTdxDit1FpQSV
      IhODXadC/PAZZAAhBKZpUt1TAN4sv0TX9frqfdhY2NlF0nXdlkwShO0dxyESifB73/gyP373
      ff51xgLDPBoTmEniHWE0U0NKj+zyBkbKoZxZY/yFF8nMzpJfWTwyA4hKCRluHhEWZgjM/a3O
      NXe3J1/oBn6ljDE7iT98luryImYshppM4VcrCMPY1dGtT9/CKazhuR4+Al9R8T2v9g9Raw1j
      W/Sdm8B02o4a3Dc+cyoQ1Fa4Uqm0yxaIRqP77k1KSS6XO/IGfLZtt7VCCSHQdR3btvkfvv1D
      1pJ9TX+rUYKcir2QXWPhznWURB/9E6Ms/uwtpJlGqBq67uC50DFyjmgyRsh3uBpTeWsxQ5/p
      c7Gvh86QQdnzEVaVkZ5uvjs5w6Dq0xOLYiRTuLkstzayZBQdo0UtwV5I36c4P4sZjxMv5vhP
      fvv4GZ5HwWdOAsAO4VmWtUsNMgxjdz56w7ijIJAE6gHeItixF0zT5KlUhO/7+1WvRq9SY+rG
      g/Qg6baFqmkgJEKPEOk7g4ZDdmUeo+8Can6e+U8+4fzLLxFxqvTGurkgZxmPpfiV117edc2+
      7/PM5Uv7PG9fAa7fuMG/+dnHiLFaPbHvOIy4FSwpWTNju6rMhKIQHz1DZX6WvFDxfb+tbNP7
      hfpf/ON//F/tfJS79ORPMxRF2UXYruvWXaWNL2vvuKP+RjtQVRXhuVxbWsfXzfrvB+pSqpjh
      6Qgk3Cphp0LZspAnuIum2Fon7FRxzQj4Pon1OXpSCYY6u8iVi4TSPYTjCS5JCzMVR+mbwDQ1
      QvE4Vc3kVsllSw2znslwdWyQSDhcZ4KDqq96uruZ6Onmpx99TLcq+OJAF194+jIvnn+C7Pwc
      a57c1/hWMU3s/BajsfCu/K8Hhc+kChTA8zzK5XLd0wM1vT8cDtfyXbbL8Eql0pGYoF0VKEDA
      dD9+/wO+vVLEjSZ34hVbG/w333h5V47LOz+7xr9azGNHO05EEsQKG7zWFWahaPHak+c5OzxE
      NFrr8ZPNZnlvcprNcpW0KomGTN5a2uSWH6p35BC+j6gU+Q+eHObZp2ppyEdJS9ja2iKZTO5T
      9f7gL7/PRqxj1/fluWlC/UM8HVL45c8fnLZ9EvjUMsBRRKRlWZS297ENkudgO616WwJUKpUD
      bYFoNEq1WsXzvCMzANQYT1EU7kzP8L2bU9yVIaQZ5qKX5x98/fW690hVVRRFYXJ6hj/8eIby
      NhPcDyKby/zOU2d44fnn2xo/NTvH//zdn1DoHGBMWGxkt/idzz/Dn1y7RVcsyj/8xdcwT8BL
      k8/n+aff/g5u7xDK9mLkFfLgeWiK4D/+8iuEW+w9dlL41DLAUYmwWq3uSpOIx+M11UQI8vl8
      3affDFJKQqFQXUochwGgJgkCleHm3Xu8Nb3Ib7/6IoZhYNt2fSUMmOW7P3mTv7QitYTlYzJB
      2K3yn798mYH+oyXwuZ7H9Nw8Z0dHKBSLJBMJVlZXubW4ymvPPHli+rmUkv/lez9kPbx/p58r
      ms83Ptd6d5eTwKeWAY6Dcrm8yz0aiGXP89A0jUKhcCATBARqWdZ9PSdN0/A8D8Mw6i7TvTAM
      g3w+z3//3bcpp3rbZgC1lCNkV7ClYNSQ/Ltfe53eFhvEPSr47k/f5X1nW91qcBJUbn7E7/3y
      Lx6ZeY+Cz4bF2wKB/hysVuFwGNu266pOsVgkHo/XbYFoNEqpVKrtZt8knwhqdkWQQXrc9Nxq
      tYqiKNi23ZKwPc8jmUzyuU6TH9BmF2YpMct5Xu3v4MknznLu3LmDxz8iqLoeQXFi4z3KUJiP
      r19/oAzwqSmJPC725gU16vmNaQxQ89bEYrE6gTd+H6xM3jG6q+1FYL8cRNCe5yGl5AvPPsNg
      cW2Xi7QpXIeOjTmuRgRffe0Lnxri932fyc1c02OhwdGau/YB4jPNALVyvJp+7bou1Wq1TvSu
      69YN2r3nJBIJotFo3c8f/B8Q4F5X6lHguu6h8YPGsYlEgt989hL61voBAx06cms8kzT53d/6
      zUM7Ij9KsG0bZ3kBd3Wp/l3wbBXDYFW296yOi880A8DOw8zn81SrVQzDQNO0+j/btut2QaDW
      qKpKKBSqE6plWXXJEUR2D4OUsm70NkJV1bb1ed/3sSyLnp5ufmOil3Ax25zxNB3Fc/jya6+e
      SvDoJGGaJl996QW0xE4z38bnM+P4bGQyD+z3P11P6xgIpEA8Ht+V8NaIcrncVLUJPD2N6seh
      qkjD7wZSZu/37TCAlBLLsuqu0SfPn2MQq+lvh6c+ZkyX9LWxSeCjBiEEkVistkl6w3cB1EiM
      m3MLD+z3P/MMEEDTNJLJZN3gbYQQgmJx/95ZAePsdXkKIahWq029N83mPg4CAz6QGIqiMJKI
      NJ3T6hvjzMCnj/gDnB8/Q7JaxLf2S2KA9+aXDkxPv584yc8NAwRpEPF4HNM0CYVCdXUhyNkp
      Fov7JISu67vGBnMZhoGiKE0lR2BvBIZsAN/3azqv47QtBWDHIH75ypPEtlbq1xAgpCqnlj78
      ICCE4NeeexqxOFsrM92DcjjOyupq/XNQ1BT8a+VKbgc/NwzQiGg0SjgcJhqN7lJtAsLdi0B6
      BG7UoOglSIprROApCoVC9RcVEL3ruhiGUZ+nFYKU61BDFFRRFGKxGJciKjh2XRUTQlAJRdEM
      45GrPDsKBvv6ONsRxyvUPEKNHjfpubsiz77v193RjcHF4+R0/VwyAOxkgiaTyXpQq1HvbjY+
      yB/a23axcfUJqsWgxjhBKaaqqvXvA2l0kEt1rzHr+z6apvE3Xn+Ff388xXh1s5bXLyVCKEyV
      XXzf/9QygRCC3/iVXybRRGP0reouz1ajk6LxOR3HAfCZDoS1A0VRiEQidYM1EKfNVIrGdIUA
      hmHgeR6O49QJfO+LaGY4B5HgZlBVdZ9IbyzFnBgb5YkzYywsL5PLF/hgYYV7mTKFQoHkfTSK
      fdj4/9s7k95IkusAf7lnZe1Fsshms5u9sHumR9MzmrEgG5JnJEGAIUCCZUsQ4INt2Af/AV91
      94/wwRddDBiGz4Yg29JBtjSWR6OZ3maaZHPvYpEs1pqVuw/FImtnFsWl2cwPIMCqypcZGZkv
      Il7Ei/cEQeDrd+f596U1pFTmcHeZLjDQdoMje8H3/aHHjLzmVXKFGIVpmpimSRAEGIaBpml9
      L26z2Tw8phfLsg5f/OMeRBAE2LY9sq7bvZE+wBms/cA75X3fJx6Pj5UcWsiw3AAAEgRJREFU
      4lVlc2uLf/r1J8gTLReOt0SPP/1ayzO0dwW+L9bSmCv0V3YINAxBEIZ6huq6TjKZHPhSiqKI
      oiihWqEwU6mdG3l6aa8PtBf42nbF6/DyA1ybmeGOJuI7Nvg+t9NH6VkH3V/nd57n9U0+jKJr
      CDTMEewq0OkjBK21gWEtdDv8SucCWXt3VFg6jbz20EqSpMOpv86uvfO8bQNZ07Sua7d7ldeF
      uWyGeL2BU90nt/DuQAO3XTeyLPe5x4d1l+8eAkVEXDGiIVDElaZrCPRvT1d/7xP+2Rs3Xotx
      aMTVoEsBNqqnEY+lM6d5RMSrTeh1ALNUxBd13PoOgprG3t9Ey0xjW04rsu+rlIA6IiIkoRUg
      lp2iUtjER4baKlL6HrXCUwJRw9ovkr65QO3lGsH7C2yXa/zid+GGUz/88M3D/x+v7PBkZedY
      mcm0wTfePcpg+PNPVtkp94dF7+XB/CRvzR8Ffv3XXzwNVcYP37nJVKbliFbcb5zrvV2GMp5n
      /Z92GUMrQK24QWV3n5guImg5rO0vSFy/h+g71LdfICo60/feRBAFdiom//JfT0Kd90ffPMpE
      +GRlJ5TcW7cm+dZ7tw4///yTFR6/OL5SfvTNB7x9O3/4OWwZ37o1xXSuFRj2vO/tMpTxPOv/
      tMsYWgESU9dJTHWEubt+pF3x3Pmk+YyIOG2iadCIK02kABFXmkgBIq40kQJEXGkiBYi40kQK
      EHGliRQg4koTKUDElSZSgIgrzdib4ncWHyNoBna5hGykCASJeCoZrQZHXErGVgDPccDdQc8/
      wN1fwvUEytUinqBi7mwQvL9AMMbWwM7tfqFDegQ9qUzDio25bfFQrmNb4rnfW0gutIznWf+n
      XMaxFUCLJ0BN4JaXSc69AZ5Fo7hJLJkglW05wwljxGfpjbgWCqEn9EhYsYOkbuMiHGSQb/8f
      llO5t5BcaBnPs/5PuYx9CuA2yuysrRPPz5EckIA5c+Nu65/DQKwqeuKNcIWKiHjF6FNHp9HA
      EyQ86/yydUdEXBR9CiBJAXa1htYRrz0i4nWlTwHqexXS1yewaidLHh0RcZnot0gCl+r2Hloq
      PuDwiIjXiz4F0BMpEBwau5WLKE9ExLnSpwBKKoMuK4jq+JF2IyIuGz0KEOB7Ln4gIitnm50v
      AlKGRj4bDTUvkh4F8Hj5299gexb1/frFlGgAr2OguXRc4+71LLlk7KKLcqXpUQCZ61/5CnvP
      l4kfhKG4SNJxja8+uM4fP7x5/MEXiCKJzM+Ml5hiZiKBJIrsVo6PpxNxdvStBDe3C2TuvY0s
      D2529158jpLMUnu5fubOcPGYiuW4LG+VTv3cg0gZGl+6PcXSZolCKVwPqKsyC9dzaIrEaqFM
      WFeVSt0im9AxtMjWukh6FMClXDVRYOiDNCtlXLeOnr9/5s5wiixCAGLvGOiMnLFuTrda8b2e
      GKmjHM3SCY1sUmdps9RXZ6PuzdAV6k2n37flCjvDiYLAg/lJ1ooVKvWjdahzdIaTmX37vZHn
      TeWn8QR9LGc4AUjGNW5MpXj8othVllHOWMmYRtN2mczEu1vkEI5O+WycpuVSaRxV5ChnLEFo
      /T1Z2cHzu2trlKOZ5wUsbpaYTBts7FS7fht1b4bWUoBiuaenucLOcHevZ0kaGq7brSTn6gxn
      bi6xsfqC1LV3yHfEcWyTnDkYj0+3Q9wd7wynKhLz02kUWQrbWACwVzHJJvWxW8R8Ns7NfIri
      fqNLAUYhiSK5VIxG08FyXEwrXLYcSRSYm0qyW2kiCMN7zl52yg22dmuk4+PnZAubbb6NrspM
      pg1u5FP8z+P10GVMGiozuQS6KvPp0vbY5RwHQYCZXIK17QreCXrAk16zTx21bI7qVgHjFI3g
      TFInk2gNE8ZB12R0TR4738C1XIIAKNX6c/4Ow/N9dssmnh/geuM9AEEQmM7GEcYIC7+128pM
      X66P53JybSLB979+n2tjPJ8gCJjOxWnabuiXH0CWRDIJPXRj0CZpqDy8k+feXC68UNCqE0kU
      uJEPP6GQNFTuzeV4eCd//MEd5LNxPnx3vt8GWP/fX5O59zbSKS4DNG2XSt3ivfsz/Of/vQgt
      N67CtCnVmuiKTEJXu8aSoxAQyGcNcqkYQRCwUiiHkquaNrWGjR8E+Geco1cQYCJl8Pn6Xp+d
      MoqkoWFaLs9Wjw9g20lMUyjXmmyHnBBok03GSMTUQyUPQwDUTJtKwyKmht+m0lbSUjV8Ywct
      G6xca/bbAJKq4vt1mlWLmNGfDfEkVOutF6TWOJ8kbgIgScJYXakfBPzHGMrZptF0ePSiOLbc
      SQiC1oNr2i6aKmM5wxNtdzKRilHcbzA/k2F5sxR6GJoyVG7k08RjKh9/8TJ0OQ1NIQhaL3RY
      REHg/o0J9iom9abNbiWcgsc0BVWR2At5fBtFElEVqd8GmH73DxH12Knulp/Lp8ilYuxVTERR
      wPfPtqWcSBvEdQVREEJPZ14GBAECAhRZRFfl0L3b5m6V+zcmqJv2eDZYtUlcV8d+uQxdoWE5
      3JvLhbYd/CDgvx+t4bjjDT8n0wam5XJ9KjlWr6gqEqVqXw8ATrnIzlKFyVsLp9YDrBbKbO1W
      x765k7K2XcZ2vHO73nkS+JCIqThuuNYfIKYqKLKEabuIghB6qJY0VGzXG9sG2681ySVjrBT2
      x5I7yfMq7NW4OZ1md0xbyvMDrk0k+hVAjukIQbjx7zic58tY3H89V1eDoGVPLW31rzmMYnu/
      zvYJXFsWN05mg8U0mXK91XsUOdtnkTBUmrY7tpI2LZfnG6UBK8F1EyFwQy9uRJwvny2f7XTk
      afBo+XxsIji5kr542eqd+ob6qm4gx1Rc5/UbPkRE9NKnAKIoYJsmDDNUfQezUqOytYZrN6nu
      7uEOSGMfEXEZ6BkCBdjlHXwCmqZNkn5f9f3NdWy7iqTm2fzdxwi6QV2Lkb0+x/7GahQYq4Mo
      MFaP2KsfGMujYdrsv1hl6s6XBwpYtQqmWUcSXFI3FxDxqK4+wpm9e5gl8rL6ogyViwJj9Vzs
      tQ2MJRNP6ORuz1Mv1TCMbJ/A9Jvv9n2Xys+EK1RExCtGjzq67JfquKZLZgx/jIiIy8pAd+jA
      rVHerZCZjoJjRbze9PQAPr7vsv3Fc9RTWgWOiHiV6bNIip8/plGrI8pRVIiI15++qBDVwirJ
      mTsIQrQUHPH602MDKCx843sXU5KIiAsgyhEWcaWJFCDiShMpQMSVZuwcYeZeAV+O49VLGBNT
      mNUGsUQcWRs/ukFExEUztgKIqkZ9exlBnYqc4Y6h81p/Hvs535/6x/7yBK3QKm2E9B/g+x9c
      SBkvRf1fdJbI7c8fkbg2R62wGTnDHUPntYKee9uuuny00qBhB/zo/fRQufMs46Wo/7MOjHUc
      N97/OgDZa/OH352WM9wDZYUfGL849ri8tgB841SueVGUTY+YIvJwVr3oolxpxlaAs+SBssL9
      +PEKIOgXF+nBEJo8UFZ+7/NYboAgDN93FHE+vFIKcBmYlwv8OPOTw881y2e9ZPOsYPG9h6mu
      8Tz8/dDzlBoehiqyVnK4NRH1AhfFlVaAH6d/cvxBwLz0BjA18DdRgJU9h7gmIY4RmOD9GzHq
      ts9iMdpOepG88gowaKbktHighhvKyOLwsHuVpocA/NFtY6xrL+3a5BNSaAMy4mx4pRSgmPwy
      L6/9zeHnUrnMp883aFge3/naw8PvExNzLFxA+Qax3/DZqXv87GmN776dJKwT7cPZlrv5dOrq
      JsgIM+EBMCW+w7Ae+PfllVIAS85Sid0+/Ly5t4GXELh7f5ZK7KgCBO30s9GclDuTKo7nMz+h
      Io2Y4bPkDA391rHnU7QZrspevB+EmPAAkKW/OrMynIkCTIn7obUbfjj8pwAsy0Y8g+HPSbHk
      DFvZb3Z9l52CCq2/Tu50/F9MvsfK7PHDpHRugv5d1xFnxckUIHDYevzZ0Bxhk1I5tHaPYq9U
      4tpMnudLy0xN9ifraPOX8Z9ST3927Pmmtb8A3jr8/LhjuDWKBXWGdjR+S86wnv1WKLk7xx8S
      ccGcTAHcSl+OMNHIENNbA2BP1KmE6O4Bhr/WcP/eArVajWxm9N7kefklQQiDVpK6g7V2DrdG
      4YqXa3vovFQIPcPV2QN/oP2O++l/PlYiHn+b01iIPEkDdNqcTAGUHF75UVeOMFk+GgDX1Rke
      z/5tqFN9OOK3rZcvyaTTeF74SMivGycxFDUZrqfGHzamNJBDyCmnlNv7PBugealAoKz3fd+l
      AF+dHcO4nO1oAe7folqr8cUXnxMEC2h6jJt374U6TRD4LUclAVLZXJdc+//eEF16zOiSM9/5
      O9y7PbbEwW9dcvkFYh1yYcuo6bGWg5nAqd3bMHrv7U++850BJ6bv3pLZ7KGcm7pN7YN/CFXG
      iY5rWTe/TS1xvAWixwxSHXJ//b5GfaE34Xd/IfM35K57G6v+D+S++6bCt3M9ttSA+pDjete1
      fvi1edx3k31yQtOyT3UxPgh8BGE8h6eTyJy33GUo40nlLkMZTyp3nMypb4jpvJjdbLC4uMjS
      i6Px+U5hk6ePH7O5vTtQBmB7uzsE+E5xG+9ATT/61S958vnzLrn9vT3Wlp5RNl0gYGvlOavr
      a+y0s8O4dX798Wdsbm72X89z2NjYYGNj4zDlkFXdY2l1hd3SUY6r3jJaZq0lt1U4KvfWCr/9
      6GPMDi/cXrny3jaLi8tsFVohxCv7e2xsbLCz122fdMn5LkuLi6yvLFFptspo10q8WN/CtJzh
      csDLrQ0KxaPcYLXKPmurq5i2O1SmVtlncXGR9Y2tw+9Ku9usrm10JdfolSttr7O4vEah2H62
      Ps+fPeGTTz7F7Whme+X2ii95+ulv2K523ouPaXYvQA56kQPfP3x+gxj28rffsTPdEabqBpoi
      YdtHN+a6LrIoYVoDVlftCo+eLmEkUgdfePzmV7+iXG8iHXRxM/k88US3SSQKAaIkHySNEMhl
      Mziue3RdUSEm+UhqbzcNSAoxVWJt6RlVq/XmCqKIKIgjc55qsQQ0SzxZPqp4VYuBJKKMGEan
      cznwXCyrlT8rlcmxub5CcWdEAjtRJps08DwX+yDRiO9aNJr2semmmo0GjnP0sltNE1k3aFSH
      J0FJpDKIBFj2kZuG2TBJJHRKpepQuWwuh+c6WB3PWxBFfLOOPWobQACOLxLXxg/F49hNtra2
      SGdCZqTsecfOfEuk67pks5mOzx6JbJZbc9f7D5Y0VNHv2MggMnvjJhOZVmEtyyIWj2PoHUaR
      7/L8+RJOs0q52XrQnmPjizrZzIG15jbwRZ1KZfBDF0WF/Mw08sF6g1vfp2aLGPERxlcQoCVz
      5FNHFmFpdw9dFrFG7vnwsW2PXO4o7ur01BRGfLRlaTsOipEidTDThiAiCy7V2ui8WJIsU60e
      rVA4TRPTNElnR9t7jmOTyx69VPV6HcsOmMilhgv5Lo4HuY7n7Tgud7/0EGPEuy3hocQzyAeh
      eBq7mzxfLYB4vEKousFEOkndDJklUtIQffswgeKZK0BM1ztaoABVVWia5uDG1a2xXWrw05/9
      DIBGdZfVtU0qtVaaHccyWV5ZZ2Ojw5oXZb705l126pBPtrwq1Vgc3I7WUdSIaTLXZgbvW3Ad
      Cz0Wp73XQk1PUnv5guaotE6BR9P2SSbbvYpPJjeBkc6gjZxIkVBVsSuDZc1sUh/RIgPEYzFs
      2z3cESWpGngemj5iK2oQoKoqinLkbSoqEqvPlzgu86+uabgHs29B4BNPpvGdYxz3ehqwIAiQ
      RAHbGX01T5DY31o+6IF9yrUGvmOFzvLZsGx2iiGzWHomti9SKLSGrmeuANWdVX7522dHXwgi
      sViMQRt7AiXL3bkMH/xxa0ugkcwi4ZJItKz3RCrD1ESO6Xx3UuRCocjE5CTiwb63Zq3M8ovP
      2Xi5d3Bij6blDN2OJwrQNJu082NblV3SM9OUdnvXdjuFZALPoXmYHEREUdWu6eDBuDx78gXr
      ay0ltiyLyVyWyanRm4rKtRpLjz5iu9YaXtQrVfREvJXMZBiBh9lz3x4Kc7NTxz74p8+esLre
      KqPvOpRKO9Sbzmght8Hj58usb7RsLcdxkBUNVRk92y5JKtdmZ5ElARBJGQq+4FMsjqj/DnRF
      wEiEcyAJ5BSTKYVrs60RyP8DERKJSoMNudIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Star Rating By Industry' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wage Dashboard' width='192'>
      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
      XSIdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Wage by category (2)' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
